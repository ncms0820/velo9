{"version":3,"sources":["views/mypage/mypage.module.scss","service/img/6.png","views/login/Login.module.scss","components/search/List.jsx","components/search/ListItemSpan.jsx","components/search/ListItem.jsx","components/search/InputSpan.jsx","components/search/Input.jsx","components/search/Hotkeys.jsx","components/search/Search.jsx","views/explore/explore.jsx","components/menu/menu.jsx","views/header/header.jsx","components/card/card.jsx","views/homepage/nav/nav.jsx","views/homepage/nav/nav_login.jsx","views/etc/error.jsx","service/fakeDb.js","views/homepage/home.jsx","components/Button.jsx","components/Input.jsx","components/Txt.jsx","views/login/pageCompnents/VerifyEmail.jsx","views/login/pageCompnents/DoubleCheckPw.jsx","views/login/ChangePw.jsx","views/login/FindId.jsx","views/login/Login.jsx","views/login/pageCompnents/CheckId.jsx","views/login/pageCompnents/CheckNickName.jsx","views/login/Signup.jsx","views/login/LoginRouter.jsx","views/mypage/mypageService.js","views/mypage/MypageHeader.jsx","views/mypage/Post.jsx","views/mypage/SeriesContent.jsx","views/mypage/Series.jsx","views/mypage/TagHandlerMobile.jsx","views/mypage/MypageProfile.jsx","views/mypage/MypageRouter.jsx","components/footer/footer.jsx","views/read/read.jsx","views/SettingPage/setting.jsx","views/login/SocialSign.jsx","views/write/write.jsx","views/redirect.jsx","views/archive/ArchiveHeader.jsx","views/archive/card/ArchiveCard.jsx","views/archive/LikeArchive.jsx","views/archive/RecentArchive.jsx","views/archive/ArchiveRouter.jsx","views/mypage/SeriesPosts.jsx","views/mypage/TempPost.jsx","app.jsx","service/db_service.js","service/auth_service.js","service/function_service.js","index.js","views/SettingPage/_setting.module.scss","components/search/_search.module.scss","views/read/_read.module.scss","views/write/_write.module.scss","views/homepage/nav/_nav_login.module.scss","components/card/_card.module.scss","views/archive/_archive.module.scss","views/header/_header.module.scss","views/homepage/nav/_nav.module.scss","components/footer/_footer.module.scss","views/archive/card/_card.module.scss","views/homepage/_home.module.scss","views/explore/_explore.module.scss","components/menu/_menu.module.scss","views/etc/_error.module.scss"],"names":["module","exports","List","children","className","styles","list","ListItemSpan","listItemSpan","ListItem","tabIndex","title","shortcuts","searchItem","activeStyle","clickHandler","otherProps","dataAttributes","JSON","stringify","useState","liColor","setLiColor","listItem","style","overflow","whiteSpace","textOverflow","paddingRight","onFocus","onBlur","onMouseMoveCapture","onMouseLeave","InputSpan","React","memo","inputSpan","inputSpanInside","input","Input","forwardRef","ref","placeholder","position","type","Hotkeys","onKeyDown","keyDownHandler","e","keyName","keyCode","ctrlKey","altKey","shiftKey","useEffect","document","addEventListener","removeEventListener","defaultStyle","width","color","backgroundColor","fontSize","top","boxShadow","border","Search","data","mapping","onEnter","onInput","onClick","onEsc","inputRef","useRef","appRef","setTabIndex","inputColor","setInputColor","inputEvent","Event","current","focus","focusHandler","target","tab","step","preventDefault","nextTabIndex","length","repeat","querySelector","CleanupInput","value","dispatchEvent","closest","nodeName","map","item","i","Explore","dbService","navigate","useNavigate","filtered","setFiltered","states","setStates","clickOutsideHandler","Promise","resolve","getDb","then","content","style1","borderRadius","explore","searchitem","parse","dataset","console","log","state","toLowerCase","result","filter","obj","includes","Menu","tabMenu","authService","setLoginInfo","userId","wrapperRef","handleClickOutside","event","contains","nav","nickname","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","a","isConfirmed","logout","Header","setOnLoginModal","useDarkreader","isDark","toggle","highlight","setHighlight","setTab","header","logo","nav_log","checked","onChange","styling","onColor","faMagnifyingGlass","onMouseEnter","loggedIn","to","idleText","Card","postThumbURL","postThumbnail","memberURL","member","memberThumbnail","thumbnail","setThumbnail","goToDetail","pic","encodeURIComponent","encoder","fileName","card","img","src","alt","body","introduce","foot","foot_wrapper","require","foot_wrapper2","faHeart","loveCount","Nav","handleTab","tabSwitch","setTabSwitch","changeTab","currentTarget","id","undefined","wrapper","faArrowTrendUp","fontAwesome","faClock","centerContent","faEllipsisV","size","hideOrbit","autoClose","orbitRadius","bounceOnClose","rotation","bounceDirection","faQuestionCircle","NavLogin","setToggle","cheese","setCheese","sort","setSort","onSearch","trigger","rotate","faAngleDoubleDown","form_input","onKeyPress","key","form_button","defaultChecked","name","onOff","form_select","Error","setTimeout","div","loading","speedMultiplier","fakeDb","postId","pageable","empty","sorted","unsorted","offset","pageNumber","pageSize","unpaged","paged","last","totalPages","totalElements","number","first","numberOfElements","Home","onLoginModal","cards","setCards","lastListRef","pageCount","setPageCount","nowLoading","useCallback","tag","page","db","changeCards","newCards","observerRef","opt","rootMargin","threshold","checkIntersect","entries","observer","forEach","entry","isIntersecting","IntersectionObserver","observe","disconnect","container","grid_container","idx","array","Button","txt","btnCSS","cursor","onKeyUp","onPressEnter","Txt","VerifyEmail","email","setEmail","setIsVerified","isVerified","verifyNumber","setVerifyNumber","confirmVerifyNumber","checkEmail","certify","requestVerifyNumber","sendMail","alert","inputAndBtn","DoubleCheckPw","newPw","setNewPw","isCheckedPw","setIsCheckedPw","newPwCheck","setNewPwCheck","ChangePw","setPage","setId","finishChangePw","findPw","findedMemberId","changePassword","twoBtnBox","FindId","findedId","setFindedId","findId","Login","pw","setPw","goLogin","login","catch","goSocialLogin","window","location","href","loginInput","joinBtn","findUserBtn","socialLoginBox","faGithub","icons","faGoogle","CheckId","isCheckedId","setIsCheckedId","아이디중복확인","validateUsername","checkId","CheckNickName","nickName","setNickName","isCheckedNickName","setIsCheckedNickName","checkNickName","validateNickname","checkNick","Signup","finishSignup","signup","LoginRouter","loginOuter","loginContentBox","setTitle","loginTitle","faX","xBtn","getMyPosts","searchValue","newPosts","post","tags","getMyPostsWithTagBtn","tagName","setSearchValue","getMySeries","newSeries","subData","seriesName","tapChageCss","activeRef","unactiveRef","borderBottom","sweetAlert","functionService","seriesId","setSerieses","deleteSeries","getSeries","seriesData","MypageHeader","setTapState","tapState","postTapBtnRef","seriesTapBtnRef","inputValue","setInputValue","onClickTapBtn","innerText","timer","clearTimeout","mypageHeader","searchInput","Post","encoderThumbnail","postTitle","postIntro","tagBox","val","tagBtn","postDate","createdDate","SeriesContent","seriesContentBox","seriesContentTxtBox","seriesContentTitle","seriesContentDesc","Series","series","seriesContents","setSeriesContents","getSeriesContents","getSeriesDetail","seriesDeleteBtn","seriesTitle","slice","GoReadPage","seriesMoreviewBtn","TagHandlerMobile","setPosts","onClickTag","memberMain","newPost","tagHandlerBox","Object","MypageProfile","profileBox","infoBox","infonickname","MypageRouter","useLocation","useParams","posts","serieses","setTags","getContents","newTags","hasOwnProperty","getTags","mypageBox","mypageContent","Footer","prev","next","goToPage","scroll","behavior","footer","left","faCircleArrowLeft","right","faCircleArrowRight","Read","cardInfo","setCardInfo","setCreatedDate","manage","setManage","love","setLove","thumb","goToWrite","onLove","reject","getPostDetail","time","split","read","meta_wrapper","meta","meta_data","memberInfo","meta_button","postDelete","initialValue","thumbsUp","faThumbsUp","prevPost","nextPost","Setting","nicknameRef","introduceRef","blogRef","passwordRef","socialRef","socialGithubRef","verifyNicknameRef","resetNicknameRef","modify","setModify","verified","setVerified","preview","setPreview","blogTitle","socialEmail","socialGithub","setData","handleSaveButton","postSetting","nicknameVerifier","verifyNick","resetNick","setAttribute","display","nickPull","removeAttribute","inputLabel","inputPlaceholder","inputAttributes","maxlength","autocapitalize","autocorrect","password","password2","changePasswordInSetting","unregister","withdraw","uploadFile","formData","FormData","inputFile","files","append","uploadMemberThumbnail","file","unstable_batchedUpdates","deleteFile","deleteMemberThumbnail","blog","social","verifyNickname","getSetting","initialData","encoderThumbnailMember","setting","main","profile_field","upload","remove","nickname_field","defaultValue","disabled","marginLeft","middle","htmlFor","email_field","bottom","SocialSign","finishSocialSignup","socialSignup","Write","editorRef","titleRef","seriesAddRef","access","thumbnailFileName","seriesToggle","setSeriesToggle","seriesList","setSeriesList","setLoading","watcher","setWatcher","fetching","getSeriesInfo","getWrite","fetchingData","postThumbnamil","findSeriesId","querySelectorAll","element","classList","add","getSeriesList","onAddSeries","addSeries","sendPost","postData","postWrite","savedId","onSave","getInstance","getMarkdown","onSaveButton","onSaveButtonTemp","writeTemporary","getElementById","selectSeriesId","required","maxTags","editable","readOnly","removeOnBackspace","height","previewStyle","plugins","chart","codeSyntaxHighlight","colorSyntax","tableMergedCell","uml","meta_info","image_field","cols","rows","series_field","series_header","series_add","series_card","Redirect","getUserInfo","ArchiveHeader","likeTapBtnRef","recentTapBtnRef","archiveHeader","testInput","ArchiveCard","LikeArchive","likePosts","setLikePosts","getLikePost","getLikedPost","v","RecentArchive","recentPosts","setRecentPosts","getRecentPost","ArchiveRouter","archiveBox","archiveContent","SeriesPosts","seriesPostTitle","TempPost","getTemp","goWritePage","TPost","App","setUserId","localStorage","setItem","removeItem","user","getItem","path","baseURL","withCredentials","headers","DbService","tagSelect","url","axios","get","resultId","AuthService","oldPassword","newPassword","username","error","memberId","inputNumber","FunctionService","ReactDOM","render"],"mappings":"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","file":"static/js/main.03a71465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypageBox\":\"mypage_mypageBox__3gQyQ\",\"profileBox\":\"mypage_profileBox__3P4ak\",\"infoBox\":\"mypage_infoBox__P4X2n\",\"mypageHeader\":\"mypage_mypageHeader__1r3oA\",\"searchInput\":\"mypage_searchInput__2eTaW\",\"activeTapBtn\":\"mypage_activeTapBtn__34xXu\",\"mypageContent\":\"mypage_mypageContent__1D7xa\",\"post\":\"mypage_post__2IxZc\",\"postTitle\":\"mypage_postTitle__AmSi9\",\"postIntro\":\"mypage_postIntro__1-Cty\",\"tagHandlerBox\":\"mypage_tagHandlerBox__318S_\",\"tagBox\":\"mypage_tagBox__1ZE9p\",\"tagBtn\":\"mypage_tagBtn__1A-BF\",\"series\":\"mypage_series__1uMjM\",\"seriesDeleteBtn\":\"mypage_seriesDeleteBtn__5SMBn\",\"seriesMoreviewBtn\":\"mypage_seriesMoreviewBtn__1rfEQ\",\"seriesTitle\":\"mypage_seriesTitle__lMc6T\",\"seriesContentBox\":\"mypage_seriesContentBox__16kUV\",\"seriesContentTxtBox\":\"mypage_seriesContentTxtBox__3VdYE\",\"seriesContentTitle\":\"mypage_seriesContentTitle__1IAYb\",\"seriesContentDesc\":\"mypage_seriesContentDesc__1jYA5\",\"seriesPostTitle\":\"mypage_seriesPostTitle__2EIGB\"};","export default __webpack_public_path__ + \"static/media/6.7658962b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginInput\":\"Login_loginInput__2YEHE\",\"loginContentBox\":\"Login_loginContentBox__3vqO8\",\"loginOuter\":\"Login_loginOuter__2nNmY\",\"loginTitle\":\"Login_loginTitle__2PtC6\",\"xBtn\":\"Login_xBtn__2uVM1\",\"inputAndBtn\":\"Login_inputAndBtn__3lbzN\",\"twoBtnBox\":\"Login_twoBtnBox__2Dj-s\",\"socialLoginBox\":\"Login_socialLoginBox__1rPMK\",\"icons\":\"Login_icons__2OzB_\"};","import React from \"react\";\r\nimport styles from \"./_search.module.scss\";\r\n\r\nconst List = ({ children }) => {\r\n  return <ul className={styles.list}>{children}</ul>;\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styles from \"./_search.module.scss\";\r\n\r\nconst ListItemSpan = () => {\r\n  return <span className={styles.listItemSpan}>Enter</span>;\r\n};\r\n\r\nexport default ListItemSpan;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./_search.module.scss\";\r\nimport ListItemSpan from \"./ListItemSpan\";\r\n\r\nconst ListItem = ({ tabIndex, title, shortcuts, searchItem, clickHandler, activeStyle, ...otherProps }) => {\r\n  const dataAttributes = { \"data-searchitem\": JSON.stringify(searchItem) };\r\n  const [liColor, setLiColor] = useState({});\r\n\r\n  return (\r\n    <li\r\n      className={styles.listItem}\r\n      tabIndex={tabIndex}\r\n      style={{\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n        paddingRight: \"6rem\",\r\n        ...liColor,\r\n      }}\r\n      onFocus={() => setLiColor({ ...activeStyle })}\r\n      onBlur={() => setLiColor({})}\r\n      onMouseMoveCapture={() => setLiColor({ ...activeStyle })}\r\n      onMouseLeave={() => setLiColor({})}\r\n      {...dataAttributes}\r\n      {...otherProps}\r\n    >\r\n      {title}\r\n      {shortcuts ? <ListItemSpan /> : <></>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport styles from \"./_search.module.scss\";\r\n\r\nconst InputSpan = React.memo(() => {\r\n  {\r\n    /* var show or not*/\r\n  }\r\n  return (\r\n    <span className={styles.inputSpan}>\r\n      <span className={styles.inputSpanInside}>/</span>\r\n      <span className={styles.inputSpanInside}>C^▲</span>\r\n      <span className={styles.inputSpanInside}>C^▼</span>\r\n    </span>\r\n  );\r\n});\r\n\r\nexport default InputSpan;\r\n","import React, { forwardRef } from \"react\";\r\nimport InputSpan from './InputSpan'\r\nimport styles from './_search.module.scss'\r\n\r\nconst { input } = styles\r\n\r\nconst Input = forwardRef(({ placeholder, shortcuts, ...otherProps }, ref) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <input\r\n        ref={ref}\r\n        {...otherProps}\r\n        tabIndex={1}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        className={input}\r\n      />\r\n      {\r\n        shortcuts ? <InputSpan /> : <></>\r\n      }\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Hotkeys = ({ children, onKeyDown }) => {\r\n  const keyDownHandler = (e) => {\r\n    let keyName = \"\";\r\n    switch (true) {\r\n      case e.keyCode === 40 && e.ctrlKey === true && e.altKey === false && e.shiftKey === false:\r\n        keyName = \"ctrl+up\";\r\n        break;\r\n      case e.keyCode === 38 && e.ctrlKey === true && e.altKey === false && e.shiftKey === false:\r\n        keyName = \"ctrl+down\";\r\n        break;\r\n      case e.keyCode === 191 && e.ctrlKey === false && e.altKey === false && e.shiftKey === false:\r\n        keyName = \"/\";\r\n        break;\r\n      case e.keyCode === 13 && e.ctrlKey === false && e.altKey === false && e.shiftKey === false:\r\n        keyName = \"enter\";\r\n        break;\r\n      case e.keyCode === 27 && e.ctrlKey === false && e.altKey === false && e.shiftKey === false:\r\n        keyName = \"esc\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    onKeyDown(keyName, e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyDownHandler);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", keyDownHandler);\r\n    };\r\n  }, [keyDownHandler]);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default Hotkeys;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport List from \"./List\";\r\nimport ListItem from \"./ListItem\";\r\nimport Input from \"./Input\";\r\nimport Hotkeys from \"./Hotkeys\";\r\n\r\nconst defaultStyle = {\r\n  width: \"calc(90% + (100vw - 100%))\",\r\n  color: \"#333\", // children inherit\r\n  backgroundColor: \"white\", // children inherit\r\n  fontSize: \"2.5rem\", // children inherit\r\n  position: \"absolute\",\r\n  top: \"0rem\",\r\n\r\n  // rounded corners example.\r\n  boxShadow: \"0 0 4px 4px rgba(0,0,0,0.2)\",\r\n  border: \"none\",\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst Search = ({\r\n  data = [],\r\n  mapping = { title: \"title\" },\r\n  style = defaultStyle,\r\n  activeStyle = { backgroundColor: \"pink\" },\r\n  placeholder = \"Search...\",\r\n  shortcuts: shortcuts = false,\r\n  onEnter = () => {},\r\n  onInput = () => {},\r\n  onClick = () => {},\r\n  onEsc = () => {},\r\n}) => {\r\n  const inputRef = useRef();\r\n  const appRef = useRef();\r\n  const [tabIndex, setTabIndex] = useState(1);\r\n  const [inputColor, setInputColor] = useState({});\r\n  var inputEvent = new Event(\"input\"); // used to imitate native input event that doesn't trigger when input.value=\"\"\r\n\r\n  // input EventListener\r\n  useEffect(() => {\r\n    inputRef.current.addEventListener(\"input\", onInput);\r\n    return () => inputRef.current && inputRef.current.removeEventListener(\"input\", onInput);\r\n  }, [onInput]);\r\n\r\n  // focuses on input field\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  // focus handler for addEventListener\r\n  const focusHandler = (e) => {\r\n    setTabIndex(e.target.tabIndex);\r\n  };\r\n\r\n  // attaches 'focus' eventlistener to the entire component\r\n  useEffect(() => {\r\n    if (inputRef) {\r\n      appRef.current.addEventListener(\"focusin\", focusHandler);\r\n    }\r\n    return () => {\r\n      if (inputRef) {\r\n        appRef.current && appRef.current.removeEventListener(\"focusin\", focusHandler);\r\n      }\r\n    };\r\n  }, [focusHandler]);\r\n\r\n  // moves focus to prev or next tabindex\r\n  function tab(e, step) {\r\n    e.preventDefault();\r\n    let nextTabIndex = tabIndex + step;\r\n    if (nextTabIndex > data.length + 1) {\r\n      if (e.repeat) {\r\n        return;\r\n      }\r\n      nextTabIndex = 1;\r\n    } else if (nextTabIndex < 1) {\r\n      if (e.repeat) {\r\n        return;\r\n      }\r\n      nextTabIndex = data.length + 1;\r\n    }\r\n    const nextElement = appRef.current.querySelector(`[tabIndex=\"${nextTabIndex}\"]`);\r\n    nextElement.focus();\r\n  }\r\n\r\n  // Cleanup input\r\n  function CleanupInput() {\r\n    inputRef.current.value = \"\";\r\n    inputRef.current.dispatchEvent(inputEvent);\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  // Click handler\r\n  const clickHandler = (e) => {\r\n    onClick(e);\r\n    CleanupInput();\r\n  };\r\n\r\n  // Hotkeys onKeyDown handler\r\n  const onKeyDown = (keyName, e) => {\r\n    if (keyName === \"ctrl+up\") {\r\n      e.preventDefault();\r\n      tab(e, 1);\r\n    }\r\n    if (keyName === \"ctrl+down\") {\r\n      e.preventDefault();\r\n      tab(e, -1);\r\n    }\r\n    if (keyName === \"esc\") {\r\n      if (e.target.closest(\".ReactSearchboxAwesome\")) {\r\n        CleanupInput();\r\n        onEsc(e);\r\n      }\r\n    }\r\n    if (keyName === \"/\") {\r\n      e.preventDefault();\r\n      inputRef.current.focus();\r\n    }\r\n    if (keyName === \"enter\") {\r\n      if (e.target.closest(\".ReactSearchboxAwesome\") && e.target.nodeName === \"LI\") {\r\n        CleanupInput();\r\n        onEnter(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={appRef} style={{ ...style }} className=\"ReactSearchboxAwesome\">\r\n      <Hotkeys onKeyDown={onKeyDown}>\r\n        <Input\r\n          ref={inputRef}\r\n          onInput={onInput}\r\n          placeholder={placeholder}\r\n          style={{ ...inputColor }}\r\n          shortcuts={shortcuts}\r\n          onFocus={() => setInputColor({ ...activeStyle })}\r\n          onBlur={() => setInputColor({})}\r\n        />\r\n        {data.length > 0 ? (\r\n          <List>\r\n            {data.map((item, i) => (\r\n              <ListItem\r\n                shortcuts={shortcuts}\r\n                tabIndex={i + 2}\r\n                key={i}\r\n                searchItem={item}\r\n                title={item[mapping.title]}\r\n                activeStyle={activeStyle}\r\n                onClick={(e) => clickHandler(e)}\r\n              />\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Hotkeys>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Search from \"../../components/search/Search\";\r\nimport styles from \"./_explore.module.scss\";\r\nconst Explore = ({ dbService }) => {\r\n  // util\r\n  const navigate = useNavigate();\r\n\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [states, setStates] = useState();\r\n  // here the data is filtered as you search\r\n  const inputHandler = (e) => {\r\n    const input = e.target.value.toLowerCase();\r\n    if (input.length === 0) {\r\n      setFiltered([]);\r\n    } else {\r\n      const result = states.filter((obj) => {\r\n        return obj.title.toLowerCase().includes(input);\r\n      });\r\n      setFiltered(result);\r\n    }\r\n  };\r\n\r\n  /*\r\n    here you define what happens when you press enter. \r\n    note that the data that is passed to the list element, is stored in the data-set attribute.\r\n  */\r\n  const enterHandler = (e) => {\r\n    const searchitem = JSON.parse(e.target.dataset.searchitem);\r\n    console.log(\"Enter pressed\", searchitem);\r\n    navigate(\"/read\", {\r\n      state: { content: searchitem },\r\n    });\r\n  };\r\n\r\n  // same as above\r\n  const clickHandler = (e) => {\r\n    const searchitem = JSON.parse(e.target.dataset.searchitem);\r\n    console.log(\"Click click!\", searchitem);\r\n  };\r\n\r\n  // what to happen when escape is pressed. in our example - nothing.\r\n  const escHandler = (e) => {\r\n    console.log(\"Escape pressed\");\r\n  };\r\n\r\n  // this is to close the searchlist when you click outside of it.\r\n  const clickOutsideHandler = (e) => {\r\n    if (!e.target.closest(\".ReactSearchboxAwesome\")) {\r\n      setFiltered([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", clickOutsideHandler);\r\n    return () => document.removeEventListener(\"click\", clickOutsideHandler);\r\n  }, []);\r\n  useEffect(() => {\r\n    const promise = new Promise((resolve) => {\r\n      const db = dbService.getDb();\r\n      resolve(db);\r\n    });\r\n    promise.then((data) => setStates(data.content));\r\n  }, [dbService]);\r\n\r\n  /* the style defined here is passed to child elements\r\n  note: children inherit some styles like font size, color, line-height...\r\n  there are some default styles as well.\r\n  */\r\n  const style = {\r\n    width: \"calc(80% + (100vw - 100%))\",\r\n    color: \"#333\", // children inherit\r\n    backgroundColor: \"white\", // children inherit\r\n    fontSize: \"2.5rem\", // children inherit\r\n    boxShadow: \"0 0 28px 2px rgba(0,0,0,0.1)\",\r\n    position: \"absolute\",\r\n    top: \"10rem\",\r\n    border: \"none\",\r\n    overflow: \"hidden\",\r\n  };\r\n\r\n  const style1 = {\r\n    ...style,\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"rgba(250,250,250,0.2)\",\r\n  };\r\n\r\n  // thats the style for the active element (hover, focus)\r\n\r\n  const activeStyle2 = {\r\n    backgroundColor: \"rgba(255,230,230,.3)\",\r\n  };\r\n\r\n  return (\r\n    <div className={styles.explore}>\r\n      <Search\r\n        data={filtered} // array of the objects is passed here. []{title: string}. each object is saved in dataset of the correspondent element.\r\n        mapping={{ title: \"title\" }} // when they don't correspond, allows to map the title of the search item and the name property in the filtered data.\r\n        style={style1} // child elements inherit some styles.\r\n        activeStyle={activeStyle2} // hover, focus, active color.\r\n        placeholder={\"Search...\"} // input placeholder.\r\n        shortcuts={true} // hide or show span elements that display shortcuts.\r\n        onEnter={enterHandler} // applies only to the list \"li\" element\r\n        onInput={inputHandler}\r\n        onClick={clickHandler} // applies only to the list \"li\" element\r\n        onEsc={escHandler} // applies to the entire component\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"./_menu.module.scss\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Menu = ({ tabMenu, authService, setLoginInfo, userId }) => {\r\n  const wrapperRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const sweetAlert = () => {\r\n    Swal.fire({\r\n      title: \"로그아웃 하시겠습니까?\",\r\n      text: \"신중하셔야 하옵니다.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"예\",\r\n      cancelButtonText: \"아니오\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await authService.logout().then(() => {\r\n          setLoginInfo();\r\n        });\r\n        navigate(\"/\");\r\n        Swal.fire(\"로그아웃\", \"정상적으로 로그아웃 되었습니다.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  const useOutsideAlerter = (ref) => {\r\n    useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          tabMenu();\r\n        }\r\n      }\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  };\r\n\r\n  useOutsideAlerter(wrapperRef);\r\nconsole.log(userId)\r\n  return (\r\n    <div className={styles.nav} ref={wrapperRef}>\r\n      <div\r\n        onClick={() => {\r\n          navigate(`/${userId.nickname}/main`);\r\n        }}\r\n      >\r\n        내 벨로그\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          navigate('/temp');\r\n        }}\r\n      >\r\n        임시 저장\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          navigate(\"/archive\");\r\n        }}\r\n      >\r\n        읽기 목록\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          navigate(\"/setting\");\r\n        }}\r\n      >\r\n        설정\r\n      </div>\r\n      <div onClick={sweetAlert}>로그아웃</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, memo } from \"react\";\r\nimport styles from \"./_header.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ReactiveButton from \"reactive-button\";\r\nimport { Switch, useDarkreader } from \"react-darkreader\";\r\nimport Menu from \"../../components/menu/menu\";\r\n\r\nconst Header = memo(({ setOnLoginModal, authService, setLoginInfo, userId }) => {\r\n  const [isDark, { toggle }] = useDarkreader(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [tab, setTab] = useState(false);\r\n  const goToSearch = () => {\r\n    navigate(\"/explore\");\r\n  };\r\n  const goToHome = () => {\r\n    setOnLoginModal(false);\r\n    navigate(\"/\");\r\n  };\r\n  const tabMenu = () => {\r\n    setTab(!tab);\r\n  };\r\n  function onMouseEnter() {\r\n    setHighlight(true);\r\n  }\r\n  function onMouseLeave() {\r\n    setHighlight(false);\r\n  }\r\n  return (\r\n    <div className={styles.header}>\r\n      <h1 className={styles.logo} onClick={goToHome}>\r\n        Velo9\r\n      </h1>\r\n      <div className={userId ? styles.nav_log : styles.nav}>\r\n        <div>\r\n          <Switch checked={isDark} onChange={toggle} styling={\"fluent\"} onColor={\"#080\"} />\r\n        </div>\r\n        <div onClick={goToSearch}>\r\n          <FontAwesomeIcon\r\n            icon={faMagnifyingGlass}\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            style={highlight && { color: \"#FED000\" }}\r\n          />\r\n        </div>\r\n        {userId ? (\r\n          <div>\r\n            <div className={styles.loggedIn}>\r\n              <div>\r\n                <Link to={\"/write\"}>\r\n                  <ReactiveButton style={{ borderRadius: \"5px\" }} color={\"dark\"} idleText={\"새 글 작성\"} />\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <ReactiveButton style={{ borderRadius: \"5px\" }} color={\"violet\"} idleText={\"menu\"} onClick={tabMenu} />\r\n              </div>\r\n            </div>\r\n            {tab && <Menu userId={userId} tabMenu={tabMenu} authService={authService} setLoginInfo={setLoginInfo} />}\r\n          </div>\r\n        ) : (\r\n          <ReactiveButton\r\n            style={{ borderRadius: \"5px\" }}\r\n            color={\"dark\"}\r\n            idleText=\"Login\"\r\n            onClick={() => setOnLoginModal(true)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport styles from \"./_card.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Card = forwardRef(({ content }, ref) => {\r\n  const postThumbURL = content.postThumbnail;\r\n  const memberURL = content.member.memberThumbnail;\r\n  const data = content;\r\n  const [thumbnail, setThumbnail] = useState();\r\n  const encoder = (pic) => {\r\n    const baseURL = \"http://localhost:8080\";\r\n    const thumbnail = `${baseURL}/displayPostThumbnail?fileName=${encodeURIComponent(pic)}`;\r\n    return setThumbnail(thumbnail);\r\n  };\r\n  const navigate = useNavigate();\r\n  const goToDetail = () => {\r\n    navigate(\"/read\", { state: { content: data } });\r\n  };\r\n  const goToProfile = () => {\r\n    navigate(\"/profile\");\r\n  };\r\n  useEffect(() => {\r\n    if (postThumbURL) {\r\n      encoder(postThumbURL.fileName);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className={styles.card} ref={ref}>\r\n      <div className={styles.img} onClick={goToDetail}>\r\n        {postThumbURL ? <img src={thumbnail} alt=\"pic\" /> : <img src={\"https://picsum.photos/200\"} alt=\"pic\" />}\r\n      </div>\r\n      <div className={styles.body} onClick={goToDetail}>\r\n        <div>\r\n          <h1>{content.title}</h1>\r\n          <p>{content.introduce}</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.foot}>\r\n        <div className={styles.foot_wrapper}>\r\n          {memberURL ? <img src={memberURL} alt=\"pic\" /> : <img src={require(\"../../service/img/6.png\")} alt=\"\" />}\r\n          <span>by</span>\r\n          <span>{content.member.nickname}</span>\r\n        </div>\r\n        <div className={styles.foot_wrapper2} onClick={goToProfile}>\r\n          <FontAwesomeIcon icon={faHeart} />\r\n          <span>{content.loveCount}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./_nav.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuestionCircle, faArrowTrendUp, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Planet } from \"react-planet\";\r\nconst Nav = ({ handleTab }) => {\r\n  const [tabSwitch, setTabSwitch] = useState(\"createdDate\");\r\n  const changeTab = (event) => {\r\n    const current = event.currentTarget.id;\r\n    if (current === \"createdDate\") {\r\n      setTabSwitch(\"createdDate\");\r\n    } else {\r\n      setTabSwitch(\"old\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let value = true;\r\n    if (value) {\r\n      handleTab(undefined, undefined, undefined, tabSwitch);\r\n    }\r\n    return () => (value = false);\r\n  }, [tabSwitch, handleTab]);\r\n\r\n  return (\r\n    <div className={styles.nav}>\r\n      <div>\r\n        <div className={styles.wrapper}>\r\n          <button id=\"createdDate\" className={tabSwitch === \"createdDate\" ? \"highlight\" : \"btn\"} onClick={changeTab}>\r\n            <FontAwesomeIcon icon={faArrowTrendUp} className={styles.fontAwesome} />\r\n            <span>트랜딩</span>\r\n          </button>\r\n          <button id=\"old\" className={tabSwitch === \"old\" ? \"highlight\" : \"btn\"} onClick={changeTab}>\r\n            <FontAwesomeIcon icon={faClock} className={styles.fontAwesome} />\r\n            <span>최신</span>\r\n          </button>\r\n        </div>\r\n        <Planet\r\n          centerContent={<FontAwesomeIcon icon={faEllipsisV} size=\"lg\" />}\r\n          hideOrbit\r\n          autoClose\r\n          orbitRadius={50}\r\n          bounceOnClose\r\n          rotation={30}\r\n          bounceDirection=\"BOTTOM\"\r\n        >\r\n          <FontAwesomeIcon icon={faQuestionCircle} size=\"lg\" />\r\n          <FontAwesomeIcon icon={faQuestionCircle} size=\"lg\" />\r\n          <FontAwesomeIcon icon={faQuestionCircle} size=\"lg\" />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </Planet>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./_nav_login.module.scss\";\r\nimport { faAngleDoubleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport ReactiveButton from \"reactive-button\";\r\nconst NavLogin = ({ handleTab }) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const formRef = useRef();\r\n  // 검색 조건\r\n  const inputRef = useRef();\r\n  const [cheese, setCheese] = useState(false); // tag info\r\n  const [sort, setSort] = useState();\r\n\r\n  //meta INFO\r\n  const handleToggle = () => {\r\n    setToggle(!toggle);\r\n  };\r\n  const handleCheeseChange = () => {\r\n    setCheese(!cheese);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    const content = inputRef.current.value;\r\n    handleTab(cheese, content, 0, sort);\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.nav}>\r\n        <div className={styles.trigger} onClick={handleToggle}>\r\n          <h1>상세 검색 조건</h1>\r\n          <div className={toggle ? styles.rotate : undefined}>\r\n            <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {toggle && (\r\n        <div className={styles.toggle}>\r\n          <div>\r\n            <div>\r\n              <div className={styles.form_input}>\r\n                <input ref={inputRef} onKeyPress={onKeyPress} type=\"text\" />\r\n                <ReactiveButton\r\n                  style={{ borderRadius: \"5px\", width: \"5rem\" }}\r\n                  color={\"dark\"}\r\n                  idleText={\"Search\"}\r\n                  onClick={onSearch}\r\n                />\r\n              </div>\r\n              <div className={styles.form_button}>\r\n                <Toggle\r\n                  id=\"cheese-status\"\r\n                  defaultChecked={cheese}\r\n                  name=\"tagYes\"\r\n                  value=\"yes\"\r\n                  onChange={handleCheeseChange}\r\n                />\r\n                <h4>태그명으로 검색</h4>\r\n              </div>\r\n              <div className={styles.onOff}>on/off</div>\r\n            </div>\r\n            <select name=\"abc\" className={styles.form_select} onChange={(e) => setSort(e.currentTarget.value)}>\r\n              <option value=\"createdDate\">정렬 조건</option>\r\n              <option value=\"createDate\">최신순</option>\r\n              <option value=\"old\">오래된 순</option>\r\n              <option value=\"viewCount\">조회수</option>\r\n              <option value=\"loveCount\">좋아요 순</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavLogin;\r\n","import React, { useEffect } from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport styles from \"./_error.module.scss\";\r\n\r\nconst Error = ({ handleTab, title }) => {\r\n  useEffect(() => {\r\n    if (title === \" No data found\") {\r\n      setTimeout(() => {\r\n        return handleTab();\r\n      }, 2000);\r\n    }\r\n  }, [handleTab, title]);\r\n  return (\r\n    <div className={styles.div}>\r\n      <ClipLoader size={20} color={\"#123abc\"} loading={true} speedMultiplier={1.5} />\r\n      <h1>{title}...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","const fakeDb = {\r\n  content: [\r\n    {\r\n      postId: 1,\r\n      title: \"title\",\r\n      introduce: \"introduce\",\r\n      loveCount: 0,\r\n      member: {\r\n        nickname: \"admin\",\r\n        memberThumbnail: {\r\n          fileName: null,\r\n        },\r\n      },\r\n      postThumbnail: null,\r\n    },\r\n    {\r\n      postId: 2,\r\n      title: \"1\",\r\n      introduce: \"1\",\r\n      loveCount: 0,\r\n      member: {\r\n        nickname: \"admin\",\r\n        memberThumbnail: {\r\n          fileName: null,\r\n        },\r\n      },\r\n      postThumbnail: null,\r\n    },\r\n    {\r\n      postId: 3,\r\n      title: \"2\",\r\n      introduce: \"2\",\r\n      loveCount: 0,\r\n      member: {\r\n        nickname: \"admin\",\r\n        memberThumbnail: {\r\n          fileName: null,\r\n        },\r\n      },\r\n      postThumbnail: null,\r\n    },\r\n    {\r\n      postId: 4,\r\n      title: \"3\",\r\n      introduce: \"3\",\r\n      loveCount: 0,\r\n      member: {\r\n        nickname: \"admin\",\r\n        memberThumbnail: {\r\n          fileName: null,\r\n        },\r\n      },\r\n      postThumbnail: null,\r\n    },\r\n  ],\r\n  pageable: {\r\n    sort: {\r\n      empty: false,\r\n      sorted: true,\r\n      unsorted: false,\r\n    },\r\n    offset: 0,\r\n    pageNumber: 0,\r\n    pageSize: 20,\r\n    unpaged: false,\r\n    paged: true,\r\n  },\r\n  last: true,\r\n  totalPages: 1,\r\n  totalElements: 4,\r\n  size: 20,\r\n  number: 0,\r\n  sort: {\r\n    empty: false,\r\n    sorted: true,\r\n    unsorted: false,\r\n  },\r\n  first: true,\r\n  numberOfElements: 4,\r\n  empty: false,\r\n};\r\n\r\nexport default fakeDb;\r\n","import { React, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport Card from \"../../components/card/card\";\r\nimport styles from \"./_home.module.scss\";\r\nimport Nav from \"./nav/nav\";\r\nimport NavLogin from \"./nav/nav_login\";\r\nimport Error from \"../etc/error\";\r\nimport fakeDb from \"../../service/fakeDb\";\r\nimport InfiniteScroll from \"../../service/InfiniteScroll\";\r\n\r\nconst Home = ({ dbService, userId, onLoginModal }) => {\r\n  const [cards, setCards] = useState();\r\n  const lastListRef = useRef(null);\r\n  const [pageCount, setPageCount] = useState(1)\r\n  const [nowLoading, setNowLoading] = useState(false);\r\n\r\n  const handleTab = useCallback(\r\n    async (tag = undefined, content = undefined, page = undefined, sort = \"createdDate\") => {\r\n      try {\r\n        const db = await dbService.getDb(tag, content, page, sort);\r\n        console.log(db)\r\n        if (db.content.length !== 0) {\r\n          setCards(db.content);\r\n        } else {\r\n          setCards(fakeDb.content);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [dbService]\r\n  );\r\n\r\n  const changeCards = async (tag = undefined, content = undefined, page = undefined, sort = \"createdDate\") => {\r\n    try {\r\n      const db = await dbService.getDb(tag, content, pageCount, sort);\r\n      console.log(db)\r\n      if (db.last) return // 마지막 페이지면 실행 X\r\n      if (db.content.length !== 0) {\r\n        const newCards = [...cards, ...db.content]\r\n        setCards(newCards);\r\n        setPageCount(pageCount + 1)\r\n      } else {\r\n        setCards(fakeDb);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [handleTab]);\r\n\r\n\r\n  const observerRef = useRef();\r\n  const opt = {\r\n    // root: document.querySelector(\"#scrollArea\"), // 겹칠 요소. 설정하지 않으면 브라우저 뷰포트가 기본값.\r\n    rootMargin: \"0px\",\r\n    threshold: 0,\r\n  }\r\n  const checkIntersect = (entries, observer) => { // 객체목록과 관찰자를 파라메터로 받는다.\r\n    entries.forEach( (entry) => {\r\n      if (entry.isIntersecting) { // isIntersecting 은 t/f로 반환됨. 교차되면 true\r\n        changeCards() // 함수\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (nowLoading) return\r\n    if (lastListRef.current) { // 로딩이 false면 실행함\r\n        observerRef.current = new IntersectionObserver(checkIntersect, opt); // observe 할 요소를 current로 지정,\r\n        lastListRef.current && observerRef.current.observe(lastListRef.current);\r\n    }\r\n    return () => {\r\n      observerRef.current && observerRef.current.disconnect(); // observerRef.current.unobserve()와 동일\r\n    }\r\n    }, [cards]); // datas가 변경되면 observer를 새로 지정\r\n  \r\n\r\n  return (\r\n    <>\r\n      {!onLoginModal && (\r\n        <div>\r\n          <div className={styles.container}>\r\n            {userId ? <NavLogin handleTab={handleTab} /> : <Nav handleTab={handleTab} />}\r\n            <section className={styles.grid_container}>\r\n              {cards ? (\r\n                cards.map((content, idx, array ) => <Card key={idx} content={content} ref={ idx === array.length - 1 ? lastListRef : null } />)\r\n                ) : (\r\n                  <Error title={\" No data found\"} handleTab={handleTab} />\r\n                  )}\r\n            </section>\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//cards.content.map((content, index) => <Card key={index} content={content} />","import React from \"react\";\r\n\r\nconst Button = ({ txt, className, onClick, name }) => {\r\n  // onClick 없을때 새로 만들어주기.\r\n\r\n  return (\r\n    <button style={btnCSS} className={className} onClick={onClick} name={name}>\r\n      {txt}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nconst btnCSS = {\r\n  cursor: \"pointer\",\r\n};\r\n","import React from \"react\";\r\nconst Input = ({ type, className, onChange, value, placeholder, onEnter }) => {\r\n  const onPressEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      return onEnter();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={className}\r\n      value={value}\r\n      name={type}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      onKeyUp={onEnter ? (e) => onPressEnter(e) : null}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst Txt = forwardRef(({ txt, className, onClick }, ref) => {\r\n  // onClick 없을때 새로 만들어주기.\r\n\r\n  return (\r\n    <span className={className} onClick={onClick} ref={ref}>\r\n      {txt}\r\n    </span>\r\n  );\r\n});\r\n\r\nexport default Txt;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../Login.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../../components/Txt\";\r\nimport Button from \"../../../components/Button\";\r\nimport Input from \"../../../components/Input\";\r\n\r\nconst VerifyEmail = ({ email, setEmail, setIsVerified, isVerified, authService, page }) => {\r\n  const [verifyNumber, setVerifyNumber] = useState(\"\"); // 인증번호 입력\r\n\r\n  const confirmVerifyNumber = () => {\r\n    const checkEmail = authService.certify(verifyNumber);\r\n    setIsVerified(checkEmail);\r\n  };\r\n\r\n  // 테스트 인증번호 생성\r\n  const requestVerifyNumber = async () => {\r\n    const result = await authService.sendMail(email);\r\n    console.log(result);\r\n    if (page === \"changePw\") {\r\n      // sendEmail은 메일이\r\n      result ? alert(\"잘못된 이메일입니다. 이메일을 확인해주세요.\") : alert(\"인증번호가 발송되었습니다.\");\r\n    } else if (page === \"signup\") {\r\n      !result ? alert(\"이미 가입된 이메일입니다.\") : alert(\"인증번호가 발송되었습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Txt txt=\"이메일 인증\" />\r\n      <div className={styles.inputAndBtn}>\r\n        <Input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} onEnter={requestVerifyNumber} />\r\n        <Button txt=\"인증 요청\" onClick={requestVerifyNumber} />\r\n      </div>\r\n\r\n      <div className={styles.inputAndBtn}>\r\n        <Input\r\n          type=\"text\"\r\n          value={verifyNumber}\r\n          onChange={(e) => setVerifyNumber(e.target.value)}\r\n          onEnter={confirmVerifyNumber}\r\n        />\r\n        <Button txt=\"인증 번호 확인\" onClick={confirmVerifyNumber} />\r\n\r\n        <Txt\r\n          txt={\r\n            isVerified\r\n              ? `인증에 성공했습니다.`\r\n              : isVerified === null\r\n              ? null // 초기값만 아무것도 표시 안되게.\r\n              : `인증 번호가 일치하지 않습니다.`\r\n          }\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../Login.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../../components/Txt\";\r\nimport Input from \"../../../components/Input\";\r\n\r\nconst DoubleCheckPw = ( {newPw, setNewPw,  isCheckedPw, setIsCheckedPw, page } ) => {\r\n\r\n  const [newPwCheck, setNewPwCheck] = useState('') // 새 비밀번호 확인\r\n\r\n    // 비밀번호 체크 (onChange)\r\n    useEffect(() => {\r\n      if ( !newPw && !newPwCheck) return\r\n      if (newPw === newPwCheck) {\r\n        setIsCheckedPw(true)\r\n      } else if (newPw !== newPwCheck) {\r\n        setIsCheckedPw(false)\r\n      } \r\n    }, [newPw, newPwCheck])\r\n  \r\n  return(\r\n    <>\r\n      <Txt txt={page === \"changePw\" ? \"새로운 비밀번호\" : \"비밀번호\"} />\r\n      <Input \r\n        type=\"password\"\r\n        value={newPw}\r\n        onChange={(e) => setNewPw(e.target.value)}\r\n      />\r\n\r\n      <Txt txt={page === \"changePw\" ? \"새로운 비밀번호 확인\" : \"새로운 비밀번호\"} />\r\n      <Input \r\n        type=\"password\"\r\n        value={newPwCheck}\r\n        onChange={(e) => setNewPwCheck(e.target.value)}\r\n      />\r\n\r\n      <Txt  \r\n        txt={\r\n            isCheckedPw \r\n            ? \"비밀번호가 일치합니다\"\r\n            : isCheckedPw === null\r\n              ? null // 초기값만 아무것도 표시 안되게.\r\n              : \"비밀번호가 일치하지 않습니다.\"\r\n          } \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DoubleCheckPw;","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\n// Components\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\nimport VerifyEmail from \"./pageCompnents/VerifyEmail\";\r\nimport DoubleCheckPw from \"./pageCompnents/DoubleCheckPw\";\r\n\r\nconst ChangePw = ({ page, setPage, authService }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [id, setId] = useState(\"\"); // 아이디 입력\r\n  const [newPw, setNewPw] = useState(\"\"); // 비밀번호\r\n\r\n  const [isVerified, setIsVerified] = useState(null); // null || boolean, 인증번호 확인여부\r\n  const [isCheckedPw, setIsCheckedPw] = useState(null); // null || boolean, 비밀번호 체크여부\r\n\r\n  const finishChangePw = async () => {\r\n    if (!isCheckedPw) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    // 임시 주석처리\r\n    // if (!isVerified) {\r\n    //   alert(\"이메일 인증이 필요합니다.\")\r\n    //   return\r\n    // }\r\n    const findedMemberId = await authService.findPw(id, email);\r\n    console.log(findedMemberId.data, newPw);\r\n    const result = await authService.changePassword(findedMemberId.data, newPw);\r\n    if (result) setPage(\"login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <VerifyEmail\r\n        email={email}\r\n        setEmail={setEmail}\r\n        setIsVerified={setIsVerified}\r\n        isVerified={isVerified}\r\n        authService={authService}\r\n        page={page}\r\n      />\r\n\r\n      <Txt txt=\"아이디를 입력해주세요\" />\r\n      <Input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\r\n\r\n      <DoubleCheckPw\r\n        newPw={newPw}\r\n        setNewPw={setNewPw}\r\n        isCheckedPw={isCheckedPw}\r\n        setIsCheckedPw={setIsCheckedPw}\r\n        page={page}\r\n      />\r\n\r\n      <div className={styles.twoBtnBox}>\r\n        <Button txt=\"돌아가기\" onClick={() => setPage(\"login\")} />\r\n        <Button txt=\"비밀번호 변경완료\" onClick={finishChangePw} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePw;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\n// Components\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\nconst FindId = ({ setPage, authService }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [findedId, setFindedId] = useState(null);\r\n\r\n  const checkEmail = async () => {\r\n    const result = await authService.findId(email);\r\n    setFindedId(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Txt txt=\"가입한 이메일을 입력해주세요\" />\r\n      <Input\r\n        type=\"text\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        onEnter={checkEmail}\r\n        value={email}\r\n        placeholder=\"input Email\"\r\n      />\r\n      <Button onClick={checkEmail} txt={\"아이디 찾기\"} />\r\n      <Txt\r\n        txt={\r\n          findedId\r\n            ? `${email}로 가입한 아이디가 전송되었습니다.`\r\n            : findedId === null\r\n            ? null // 초기값만 아무것도 표시 안되게.\r\n            : `가입한 아이디가 아닙니다.`\r\n        }\r\n      />\r\n\r\n      <div className={styles.twoBtnBox}>\r\n        <Button txt=\"돌아가기\" onClick={() => setPage(\"login\")} />\r\n        <Button txt=\"비밀번호 변경하기\" onClick={() => setPage(\"changePw\")} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindId;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n// Components\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\nconst Login = ({ setPage, authService, setLoginInfo }) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n\r\n  // 일반 로그인\r\n  const goLogin = async () => {\r\n    const result = await authService.login(id, pw).catch(() => alert(\"아이디, 비밀번호를 확인해주세요.\"));\r\n    setLoginInfo(result);\r\n  };\r\n\r\n  // 소셜 로그인\r\n  const goSocialLogin = async (event) => {\r\n    const { id } = event.currentTarget;\r\n    console.log(id);\r\n    if (id === \"githubLogin\") {\r\n      window.location.href =\r\n        \"http://localhost:8080/oauth2/authorization/github?redirect_uri=http://localhost:3000/oauth2/redirect\";\r\n    } else if (id === \"googleLogin\") {\r\n      window.location.href =\r\n        \"http://localhost:8080/oauth2/authorization/google?redirect_uri=http://localhost:3000/oauth2/redirect\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Txt txt=\"아이디\" /> */}\r\n      <Input\r\n        type=\"text\"\r\n        className={styles.loginInput}\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)}\r\n        placeholder=\"ID\"\r\n      />\r\n      {/* <Txt txt=\"비밀번호\" /> */}\r\n      <Input\r\n        type=\"password\"\r\n        className={styles.loginInput}\r\n        value={pw}\r\n        onChange={(e) => setPw(e.target.value)}\r\n        onEnter={goLogin}\r\n        placeholder=\"PASSWARD\"\r\n      />\r\n      <Button txt=\"로그인\" onClick={goLogin} />\r\n\r\n      <div className={styles.twoBtnBox}>\r\n        <Button txt=\"회원가입\" className={styles.joinBtn} onClick={() => setPage(\"signup\")} />\r\n        <Button txt=\"아이디/비밀번호 찾기\" className={styles.findUserBtn} onClick={() => setPage(\"findId\")} />\r\n      </div>\r\n\r\n      <div className={styles.socialLoginBox}>\r\n        <FontAwesomeIcon icon={faGithub} id=\"githubLogin\" className={styles.icons} onClick={goSocialLogin} />\r\n        <FontAwesomeIcon icon={faGoogle} id=\"googleLogin\" className={styles.icons} onClick={goSocialLogin} />\r\n      </div>\r\n      {/* <Test /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styles from \"../Login.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../../components/Txt\";\r\nimport Input from \"../../../components/Input\";\r\nimport Button from \"../../../components/Button\";\r\n\r\nconst CheckId = ({ id, setId, isCheckedId, setIsCheckedId, authService }) => {\r\n  const 아이디중복확인 = async () => {\r\n    console.log(\"아이디중복확인\");\r\n    const checkId = await authService.validateUsername(id);\r\n    setIsCheckedId(checkId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Txt txt=\"아이디\" />\r\n      <div className={styles.inputAndBtn}>\r\n        <Input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} onEnter={아이디중복확인} />\r\n        <Button txt=\"아이디 중복확인\" onClick={아이디중복확인} />\r\n      </div>\r\n      <Txt\r\n        txt={\r\n          isCheckedId\r\n            ? \"아이디 사용이 가능합니다\"\r\n            : isCheckedId === null\r\n            ? null // 초기값만 아무것도 표시 안되게.\r\n            : \"사용이 불가능한 아이디입니다.\"\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckId;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../Login.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../../components/Txt\";\r\nimport Input from \"../../../components/Input\";\r\nimport Button from \"../../../components/Button\";\r\n\r\nconst CheckNickName = ({ nickName, setNickName, isCheckedNickName, setIsCheckedNickName, authService }) => {\r\n  const checkNickName = async () => {\r\n    console.log(nickName);\r\n    const checkNick = await authService.validateNickname(nickName);\r\n    console.log(checkNick.data);\r\n    setIsCheckedNickName(checkNick);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Txt txt=\"닉네임\" />\r\n      <div className={styles.inputAndBtn}>\r\n        <Input type=\"text\" value={nickName} onChange={(e) => setNickName(e.target.value)} />\r\n        <Button txt=\"닉네임 중복검사\" onClick={checkNickName} />\r\n      </div>\r\n      <Txt\r\n        txt={\r\n          isCheckedNickName\r\n            ? \"닉네임 사용이 가능합니다\"\r\n            : isCheckedNickName === null\r\n            ? null // 초기값만 아무것도 표시 안되게.\r\n            : \"사용이 불가능한 닉네임입니다.\"\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckNickName;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\n// Components\r\nimport Button from \"../../components/Button\";\r\n\r\nimport VerifyEmail from \"./pageCompnents/VerifyEmail\";\r\nimport DoubleCheckPw from \"./pageCompnents/DoubleCheckPw\";\r\nimport CheckId from \"./pageCompnents/CheckId\";\r\nimport CheckNickName from \"./pageCompnents/CheckNickName\";\r\n\r\nconst Signup = ({ page, setPage, authService, setLoginInfo }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [id, setId] = useState(\"\"); // 아이디 입력\\\r\n  const [newPw, setNewPw] = useState(\"\"); // 비밀번호\r\n  const [nickName, setNickName] = useState(\"\"); // 닉네임\r\n\r\n  const [isCheckedId, setIsCheckedId] = useState(null); // null || boolean, 아이디 중복확인여부\r\n  const [isVerified, setIsVerified] = useState(null); // null || boolean, 인증번호 확인여부\r\n  const [isCheckedPw, setIsCheckedPw] = useState(null); // null || boolean, 비밀번호 체크여부\r\n  const [isCheckedNickName, setIsCheckedNickName] = useState(null); // null || boolean, 비밀번호 체크여부\r\n\r\n  const finishSignup = async () => {\r\n    if (!isCheckedId) {\r\n      alert(\"아이디 중복체크가 필요합니다.\");\r\n      return;\r\n    }\r\n    // if (!isVerified) {\r\n    //   alert(\"이메일 인증이 필요합니다.\");\r\n    //   return;\r\n    // }\r\n    if (!isCheckedPw) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    if (!isCheckedNickName) {\r\n      alert(\"닉네임 확인이 필요합니다. 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    // 가입 및 로그인\r\n    await authService.signup(id, newPw, nickName, email).then(() => {\r\n      authService\r\n        .login(id, newPw)\r\n        .then((result) => {\r\n          setLoginInfo(result);\r\n        })\r\n        .catch((e) => alert(\"아이디, 비밀번호를 확인해주세요.\"));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 이메일 확인 */}\r\n      <VerifyEmail\r\n        email={email}\r\n        setEmail={setEmail}\r\n        setIsVerified={setIsVerified}\r\n        isVerified={isVerified}\r\n        authService={authService}\r\n        page={page}\r\n      />\r\n\r\n      {/* 아이디 중복체크 */}\r\n      <CheckId\r\n        id={id}\r\n        setId={setId}\r\n        isCheckedId={isCheckedId}\r\n        setIsCheckedId={setIsCheckedId}\r\n        authService={authService}\r\n      />\r\n\r\n      {/* 닉네임 중복체크 */}\r\n      <CheckNickName\r\n        nickName={nickName}\r\n        setNickName={setNickName}\r\n        isCheckedNickName={isCheckedNickName}\r\n        setIsCheckedNickName={setIsCheckedNickName}\r\n        authService={authService}\r\n      />\r\n\r\n      {/* 비밀번호체크, async X */}\r\n      <DoubleCheckPw newPw={newPw} setNewPw={setNewPw} isCheckedPw={isCheckedPw} setIsCheckedPw={setIsCheckedPw} />\r\n\r\n      <div className={styles.twoBtnBox}>\r\n        <Button txt=\"돌아가기\" onClick={() => setPage(\"login\")} />\r\n        <Button txt=\"가입하기\" onClick={finishSignup} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\n// Components\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// page\r\nimport ChangePw from \"./ChangePw\";\r\nimport FindId from \"./FindId\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\nconst LoginRouter = ({ authService, setOnLoginModal, setLoginInfo }) => {\r\n  const [page, setPage] = useState(\"login\");\r\n\r\n  const setTitle = () => {\r\n    switch (page) {\r\n      case \"login\":\r\n        return \"LOGIN\";\r\n      case \"findId\":\r\n        return \"아이디 찾기\";\r\n      case \"changePw\":\r\n        return \"비밀번호 변경하기\";\r\n      case \"signup\":\r\n        return \"회원가입\";\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginOuter}>\r\n      <div className={styles.loginContentBox}>\r\n        <Txt txt={setTitle()} className={styles.loginTitle} />\r\n        <FontAwesomeIcon icon={faX} className={styles.xBtn} onClick={() => setOnLoginModal(false)} />\r\n\r\n        {page === \"login\" && <Login setPage={setPage} authService={authService} setLoginInfo={setLoginInfo} />}\r\n        {page === \"findId\" && <FindId setPage={setPage} authService={authService} />}\r\n        {page === \"changePw\" && <ChangePw page={page} setPage={setPage} authService={authService} />}\r\n        {page === \"signup\" && (\r\n          <Signup page={page} setPage={setPage} authService={authService} setLoginInfo={setLoginInfo} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRouter;\r\n","import Swal from \"sweetalert2\";\r\n\r\n//  post 받아오기\r\nexport const getMyPosts = (result, searchValue ) => {\r\n  const newPosts = result.data.data.content;\r\n  if (searchValue === \"\") { // 빈값일때 전체글 로드\r\n    return newPosts\r\n  }\r\n  const filteredPosts = newPosts.filter((post) =>  \r\n      ( post.tags.includes(searchValue) ||\r\n        post.title.includes(searchValue) ||\r\n        post.introduce.includes(searchValue)\r\n      ) \r\n  )\r\n  return filteredPosts\r\n}\r\n\r\n// 태그 눌렀을때 (태그만 필터링)\r\nexport const getMyPostsWithTagBtn = (result, tagName, setSearchValue ) => {\r\n  const newPosts = result.data.data.content;\r\n  if (tagName === \"\") return newPosts // 전체보기 눌렀을 때\r\n  setSearchValue(\"\")\r\n  const filteredPosts = newPosts.filter((post) => post.tags.includes(tagName) )\r\n  return filteredPosts\r\n}\r\n  \r\n// series 받아오기\r\nexport const getMySeries = (result, searchValue ) => {\r\n    const newSeries = result.data.subData\r\n    if (searchValue === \"\") {\r\n      return newSeries\r\n    }\r\n    const filteredSeries = newSeries.filter((post) => post.seriesName.includes(searchValue))\r\n    return filteredSeries\r\n  }\r\n\r\n  export const getTags = (posts) => {\r\n    const newTags = new Object();\r\n    for (let post of posts) {\r\n      for(let tag of post.tags) {\r\n        if (!newTags.hasOwnProperty(tag))  newTags[tag] = 1\r\n        else newTags[tag]++\r\n      }\r\n    }\r\n    return newTags\r\n  }\r\n\r\n  export const tapChageCss = (activeRef, unactiveRef) => {\r\n    activeRef.current.style.color = \"black\"\r\n    activeRef.current.style.borderBottom = \"2px solid black\"\r\n    unactiveRef.current.style.color = \"gray\"\r\n    unactiveRef.current.style.borderBottom = \"none\"\r\n  }\r\n\r\n  export const sweetAlert = async (functionService, dbService, seriesId, nickname, searchValue, setSerieses) => {\r\n    await Swal.fire({\r\n      title: \"시리즈를 삭제할까요?\",\r\n      text: \"시리즈의 글은 삭제되지 않습니다.\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"예\",\r\n      cancelButtonText: \"아니오\",\r\n    })\r\n    .then( async (result) => {\r\n      if (!result.isConfirmed) return\r\n      await functionService.deleteSeries(seriesId)\r\n      const seriesData = await dbService.getSeries(nickname)\r\n      let newSeries = getMySeries(seriesData, searchValue);\r\n      setSerieses(newSeries)\r\n      Swal.fire(\"삭제 완료\", \"시리즈가 삭제되었습니다.\", \"success\");\r\n    });\r\n  };\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nimport { tapChageCss } from \"./mypageService\"\r\n// Components\r\nimport Input from \"../../components/Input\";\r\nimport Txt from \"../../components/Txt\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst MypageHeader = ( { setTapState, setSearchValue, tapState } ) => {\r\n\r\n  const postTapBtnRef = useRef(null)\r\n  const seriesTapBtnRef = useRef(null)\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  useEffect(() => {\r\n    tapChageCss(postTapBtnRef, seriesTapBtnRef)\r\n  }, [])\r\n  \r\n  const onClickTapBtn = (e) => {\r\n    const type = e.target.innerText\r\n    if (type === \"글\") {\r\n      tapChageCss(postTapBtnRef, seriesTapBtnRef)\r\n      setTapState(\"post\")\r\n    } else if (type === \"시리즈\") {\r\n      tapChageCss(seriesTapBtnRef, postTapBtnRef)\r\n      setTapState(\"series\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(()=>{ \r\n      setSearchValue(inputValue)\r\n     }, 500);\r\n    return () => { \r\n      clearTimeout(timer)\r\n    }\r\n  }, [inputValue]);\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.mypageHeader}>\r\n      <div className={styles.searchInput}>\r\n        <FontAwesomeIcon\r\n            icon={faMagnifyingGlass}\r\n          />\r\n        <Input\r\n          className={styles.searchInput}\r\n          type=\"text\"\r\n          onChange={ (e) => setInputValue(e.target.value) }\r\n          value={inputValue}\r\n          placeholder={tapState === \"post\" ? \"제목, 소개, 태그로 검색하세요\" : \"시리즈 명으로 검색하세요\"}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Txt\r\n          txt=\"글\"\r\n          ref={postTapBtnRef}\r\n          onClick={(e) => onClickTapBtn(e)}\r\n        />\r\n        <Txt\r\n          txt=\"시리즈\"\r\n          ref={seriesTapBtnRef}\r\n          onClick={(e) => onClickTapBtn(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MypageHeader;","import React, { useState, useRef } from \"react\"\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nimport Txt from \"../../components/Txt\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst Post = ( { dbService, post, onClick } ) => {\r\n\r\n  \r\n  return(\r\n    <div className={styles.post} onClick={onClick}>\r\n      {post.thumbnail &&\r\n        <img src={  dbService.encoderThumbnail(post.thumbnail.fileName)} alt=\"\" />\r\n      }\r\n      <Txt\r\n        className={styles.postTitle}\r\n        txt={post.title}\r\n      />\r\n      <Txt\r\n        className={styles.postIntro}\r\n        txt={post.introduce}\r\n      />\r\n\r\n      { post.tags.length &&\r\n        <div className={styles.tagBox}>\r\n          {post.tags.map( (val) => {\r\n              return <Button \r\n                      txt={val}\r\n                      className={styles.tagBtn}\r\n                      onClick={() => console.log(val)}\r\n                    />\r\n            })}\r\n        </div>\r\n      }\r\n      <div>\r\n        <Txt\r\n          className={styles.postDate}\r\n          txt={post.createdDate + \" · \"} // 날짜 계산식 적용\r\n        />\r\n        {/* <Txt\r\n          className={styles.postComments}\r\n          txt={post.comments.length + \"개의 댓글\"} // 댓글은 따로 불러오나??\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Txt from \"../../components/Txt\";\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nconst SeriesContent = ({ dbService, post, onClick }) => {\r\n  console.log(post.thumbnail);\r\n\r\n  return (\r\n    <li className={styles.seriesContentBox} onClick={onClick}>\r\n      {post.thumbnail ? (\r\n        <img src={dbService.encoderThumbnail(post.thumbnail.fileName)} alt=\"\" />\r\n      ) : (\r\n        <img src=\"/test_img.png\" alt=\"\" />\r\n      )}\r\n\r\n      <div className={styles.seriesContentTxtBox}>\r\n        <Txt className={styles.seriesContentTitle} txt={post.title} />\r\n        <Txt className={styles.seriesContentDesc} txt={post.introduce} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SeriesContent;\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nimport Txt from \"../../components/Txt\";\r\nimport Button from \"../../components/Button\";\r\nimport SeriesContent from \"./SeriesContent\"\r\n\r\nimport { dummyData } from \"./dummy\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getMySeries, sweetAlert } from \"./mypageService\";\r\n\r\nconst Series = ( { series, nickname, dbService, functionService, searchValue, setSerieses } ) => {\r\n\r\n  const navigate = useNavigate();\r\n  const [seriesContents, setSeriesContents] = useState([])\r\n\r\n  const getSeriesContents = async() => {\r\n    const result = await dbService.getSeriesDetail(nickname, series.seriesName)\r\n    setSeriesContents(result.data.content)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSeriesContents()\r\n  }, [])\r\n\r\n  // 현재 에러남\r\n  const onClickDeleteSeries = () => {\r\n    sweetAlert(functionService, dbService, series.seriesId, nickname, searchValue, setSerieses);\r\n  }\r\n\r\n  const GoReadPage = (post) => {\r\n    navigate(\"/read\", {\r\n      state: { content: { member: { nickname: nickname }, postId: post.id } },\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className={styles.series}>\r\n\r\n      <Button \r\n        txt=\"시리즈 삭제\"\r\n        className={styles.seriesDeleteBtn}\r\n        onClick={() => onClickDeleteSeries()}\r\n      />\r\n\r\n      <Txt\r\n        className={styles.seriesTitle}\r\n        txt={series.seriesName}\r\n      />\r\n      <ul>\r\n        {\r\n          seriesContents &&\r\n          seriesContents.slice(seriesContents.length -3, seriesContents.length).map((post, idx) => {\r\n            return <SeriesContent\r\n                    key={idx}\r\n                    dbService={dbService}\r\n                    post={post}\r\n                    onClick={() => GoReadPage(post)}\r\n                  />\r\n        })\r\n        }\r\n      </ul>\r\n        {\r\n          seriesContents.length !== 0 &&\r\n          <Button \r\n            txt=\"시리즈 전체보기\"\r\n            className={styles.seriesMoreviewBtn}\r\n            onClick={() => navigate(`/${nickname}/series/${series.seriesName}`) }\r\n          />\r\n        }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series;","import React from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport Txt from \"../../components/Txt\";\r\nimport styles from \"./mypage.module.scss\";\r\nimport { getMyPostsWithTagBtn } from \"./mypageService\";\r\n\r\nconst TagHandlerMobile = ({ dbService, tags, nickname, setSearchValue, setPosts }) => {\r\n  const onClickTag = async (e) => {\r\n    const result = await dbService.memberMain(nickname, 0);\r\n    const newPost = await getMyPostsWithTagBtn(result, e.target.name, setSearchValue);\r\n    setPosts(newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.tagHandlerBox}>\r\n      <Button\r\n        txt={`전체보기`} // (${posts.length}) 전체 글 길이를 알아야하는데, 따로 tags를 받아오지 않는이상 힘들듯하다.\r\n        className={styles.tagBtn}\r\n        onClick={(e) => onClickTag(e)}\r\n      />\r\n      {tags &&\r\n        Object.entries(tags).map((tag) => {\r\n          return (\r\n            <Button\r\n              key={tag[0]}\r\n              txt={`${tag[0]} (${tag[1]})`}\r\n              className={styles.tagBtn}\r\n              name={tag[0]}\r\n              onClick={(e) => onClickTag(e)}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagHandlerMobile;\r\n","import React from \"react\"\r\n// import { useParams } from \"react-router-dom\";\r\nimport Txt from \"../../components/Txt\";\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nconst MypageProfile = ( {nickname, thumbnail, dbService } ) => {\r\n\r\n\r\n  return(\r\n    <>\r\n      <div className={styles.profileBox}>\r\n        { thumbnail\r\n          ? <img src={dbService.encoderThumbnail(thumbnail)} alt=\"\" />\r\n          : <img src=\"/test_img.png\" alt=\"\" />\r\n        }\r\n          <div className={styles.infoBox}>\r\n          <Txt \r\n            className={styles.infonickname}\r\n            txt={nickname}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MypageProfile;","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport styles from \"./mypage.module.scss\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// page\r\nimport MypageHeader from \"./MypageHeader\";\r\nimport Post from \"./Post\";\r\nimport Series from \"./Series\";\r\nimport TagHandlerMobile from \"./TagHandlerMobile\";\r\nimport { getMyPosts, getMySeries, getTags } from \"./mypageService\";\r\nimport MypageProfile from \"./MypageProfile\";\r\n\r\nconst MypageRouter = ({ dbService, functionService }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { nickname } = useParams();\r\n  const [tapState, setTapState] = useState(\"post\"); // post, series, introduce는 보류\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [serieses, setSerieses] = useState([]);\r\n\r\n  const [tags, setTags] = useState(null);\r\n\r\n  const getContents = async () => {\r\n    if (tapState === \"post\") {\r\n      const result = await dbService.memberMain(nickname, 0);\r\n      console.log(result);\r\n      const newPost = getMyPosts(result, searchValue);\r\n      setPosts(newPost);\r\n    } else if (tapState === \"series\") {\r\n      const result = await dbService.getSeries(nickname);\r\n      const newSeries = getMySeries(result, searchValue);\r\n      setSerieses(newSeries);\r\n    }\r\n  };\r\n\r\n  // posts는 모든 글에서 받아온 기준으로!\r\n  useEffect(() => {\r\n    if (!posts.length) return; // 포스트 없으면 실행이 안됨. not property\r\n    if (tags !== null) return;\r\n    const newTags = getTags(posts);\r\n    setTags(newTags);\r\n  }, [posts]);\r\n\r\n  /*검색어에 따른 posts filter조건*/\r\n  useEffect(() => {\r\n    getContents();\r\n  }, [tapState, searchValue]);\r\n\r\n  useEffect(() => {\r\n    setSearchValue(\"\");\r\n  }, [tapState]);\r\n\r\n  const GoReadPage = (post) => {\r\n    navigate(\"/read\", {\r\n      state: { content: { member: { nickname: nickname }, postId: post.id } },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(posts);\r\n  }, [posts]);\r\n\r\n  return (\r\n    <div className={styles.mypageBox}>\r\n      <MypageProfile dbService={dbService} nickname={nickname} thumbnail={location.state?.thumbnail} />\r\n\r\n      <MypageHeader setTapState={setTapState} tapState={tapState} setSearchValue={setSearchValue} />\r\n\r\n      {tapState === \"post\" && (\r\n        <TagHandlerMobile\r\n          dbService={dbService}\r\n          tags={tags}\r\n          nickname={nickname}\r\n          setSearchValue={setSearchValue}\r\n          setPosts={setPosts}\r\n        />\r\n      )}\r\n\r\n      <div className={styles.mypageContent}>\r\n        {/* 포스트일때 */}\r\n        {tapState === \"post\" &&\r\n          posts.length !== 0 &&\r\n          posts.map((post, idx) => {\r\n            return <Post key={idx} dbService={dbService} post={post} onClick={() => GoReadPage(post)} />;\r\n          })}\r\n\r\n        {/* 시리즈일때 */}\r\n        {tapState === \"series\" &&\r\n          serieses.length !== 0 &&\r\n          serieses.map((series, idx) => {\r\n            return (\r\n              <Series\r\n                key={idx}\r\n                series={series}\r\n                nickname={nickname}\r\n                dbService={dbService}\r\n                functionService={functionService}\r\n                searchValue={searchValue}\r\n                setSerieses={setSerieses}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MypageRouter;\r\n","import React from \"react\";\r\nimport styles from \"./_footer.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleArrowLeft, faCircleArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Footer = ({ prev, next, nickname }) => {\r\n  const navigate = useNavigate();\r\n  function goToPage(id, nickname) {\r\n    //prev.id ? prev.title\r\n    const data = { postId: id, member: { nickname: nickname } };\r\n    navigate(\"/read\", { state: { content: data } });\r\n    window.scroll({ top: 0, behavior: \"smooth\" });\r\n  }\r\n  return (\r\n    <div className={styles.footer}>\r\n      {prev ? (\r\n        <div className={styles.left} onClick={() => goToPage(prev.id, nickname)}>\r\n          <FontAwesomeIcon icon={faCircleArrowLeft} size={\"2x\"} />\r\n          <div>\r\n            <span>이전 포스트</span>\r\n            <span>{prev.title}</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {next && (\r\n        <div className={styles.right} onClick={() => goToPage(next.id, nickname)}>\r\n          <div>\r\n            <span>다음 포스트</span>\r\n            <span>{next.title}</span>\r\n          </div>\r\n          <FontAwesomeIcon icon={faCircleArrowRight} size={\"2x\"} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport styles from \"./_read.module.scss\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\r\nimport { Viewer } from \"@toast-ui/react-editor\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactiveButton from \"reactive-button\";\r\nimport Footer from \"../../components/footer/footer\";\r\nimport Error from \"../etc/error\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Read = ({ dbService, userId, functionService }) => {\r\n  const [cardInfo, setCardInfo] = useState(\"\");\r\n  const [createdDate, setCreatedDate] = useState();\r\n  const [manage, setManage] = useState(false);\r\n  const [love, setLove] = useState(false);\r\n  const [thumbnail, setThumbnail] = useState();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  console.log(\"location\", location.state);\r\n  const data = location.state.content;\r\n  const memberThumbnail = data.member.memberThumbnail && data.member.memberThumbnail.fileName;\r\n  const nickname = data.member.nickname;\r\n  const id = data.postId;\r\n  const onDelete = () => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      text: \"신중하셔야 하옵니다.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"예\",\r\n      cancelButtonText: \"아니오\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await dbService.postDelete(cardInfo.id);\r\n        navigate(\"/\");\r\n        Swal.fire(\"삭제 완료\", \"정상적으로 삭제 되었습니다.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  const encoder = async () => {\r\n    if (data.postThumbnail != null) {\r\n      const thumb = await dbService.encoderThumbnail(data.postThumbnail.fileName);\r\n      setThumbnail(thumb);\r\n    }\r\n  };\r\n\r\n  const goToWrite = async () => {\r\n    navigate(\"/write\", { state: { postId: id } });\r\n  };\r\n  const onLove = async () => {\r\n    await functionService.love(cardInfo.id);\r\n    setLove(!love);\r\n  };\r\n\r\n  const goToProfile = () => {\r\n    return navigate(`/${nickname}/main`, { state: { memberThumbnail: memberThumbnail && memberThumbnail } });\r\n  };\r\n\r\n  const goToSeries = () => {\r\n    const seriesName = cardInfo.seriesName;\r\n    return navigate(`/${nickname}/series/${seriesName}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const data = dbService.getPostDetail(nickname, id);\r\n      resolve(data);\r\n      reject(\"카드 정보 가져오기 실패\");\r\n    });\r\n    promise.then((data) => {\r\n      const time = data.createdDate.split(\"-\");\r\n      setCreatedDate(`${time[0]}년 ${time[1]}월 ${time[2]}일`);\r\n      setCardInfo(data);\r\n      console.log(data);\r\n      return;\r\n    });\r\n  }, [dbService, nickname, id, love]);\r\n  useEffect(() => {\r\n    return () => {\r\n      setCardInfo(null);\r\n    };\r\n  }, [id]);\r\n  useEffect(() => {\r\n    if (userId) {\r\n      if (userId.nickname === nickname) {\r\n        setManage(true);\r\n      } else {\r\n        setManage(false);\r\n      }\r\n    }\r\n  }, [userId, nickname]);\r\n  useEffect(() => {\r\n    encoder();\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      {cardInfo ? (\r\n        <div className={styles.read}>\r\n          <div className={styles.title}>\r\n            <div>{cardInfo.title}</div>\r\n            <div className={styles.img}>\r\n              {data.postThumbnail ? (\r\n                <img src={thumbnail} alt=\"pic\" />\r\n              ) : (\r\n                <img src={\"https://picsum.photos/200\"} alt=\"pic\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.meta_wrapper}>\r\n            <div className={styles.meta}>\r\n              <div className={styles.meta_data}>\r\n                <div onClick={goToProfile}>{cardInfo.memberInfo.name}</div>\r\n                <span>&nbsp;·&nbsp;</span>\r\n                <div>{createdDate}</div>\r\n              </div>\r\n              {manage && (\r\n                <div className={styles.meta_button}>\r\n                  <ReactiveButton\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    color={\"dark\"}\r\n                    idleText={\"수정\"}\r\n                    onClick={goToWrite}\r\n                  />\r\n                  <ReactiveButton style={{ borderRadius: \"5px\" }} color={\"red\"} idleText={\"삭제\"} onClick={onDelete} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={styles.tag}>\r\n              {cardInfo.tags.map((data) => (\r\n                <div>#{data}</div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={styles.series}>\r\n            <h1 onClick={goToSeries}>{cardInfo.seriesName}</h1>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <Viewer initialValue={cardInfo.content} />\r\n          </div>\r\n          <div className={styles.thumb}>\r\n            <div>\r\n              <span>도움 돼요!</span>\r\n              <div onClick={onLove} className={styles.thumbsUp}>\r\n                <FontAwesomeIcon icon={faThumbsUp} size={\"2x\"} />\r\n              </div>\r\n              <span>{cardInfo.loveCount}</span>\r\n            </div>\r\n          </div>\r\n          {/* <Comment />  나중에 disqus api 활용해볼것*/}\r\n          <Footer prev={cardInfo.prevPost} next={cardInfo.nextPost} nickname={nickname} />\r\n        </div>\r\n      ) : (\r\n        <Error title={\" Loading\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./_setting.module.scss\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { unstable_batchedUpdates } from \"react-dom\";\r\n\r\nconst Setting = ({ dbService, authService, setLoginInfo }) => {\r\n  const navigate = useNavigate();\r\n  const nicknameRef = useRef();\r\n  const introduceRef = useRef();\r\n  const blogRef = useRef();\r\n  const passwordRef = useRef();\r\n  const socialRef = useRef();\r\n  const socialGithubRef = useRef();\r\n  const verifyNicknameRef = useRef();\r\n  const resetNicknameRef = useRef();\r\n  const [modify, setModify] = useState();\r\n  const [verified, setVerified] = useState(false);\r\n  const [preview, setPreview] = useState(\"\");\r\n\r\n  //초기값\r\n  const [data, setData] = useState({\r\n    nickname: \"\",\r\n    introduce: \"\",\r\n    blogTitle: \"\",\r\n    socialEmail: \"\",\r\n    socialGithub: \"\",\r\n    thumbnail: \"\",\r\n  });\r\n\r\n  const handleSaveButton = async () => {\r\n    setModify(true);\r\n    if (modify) {\r\n      if (verified === true) {\r\n        const nickname = nicknameRef.current.value;\r\n        const introduce = introduceRef.current.value;\r\n        const blogTitle = blogRef.current.value;\r\n        const socialEmail = socialRef.current.value;\r\n        const socialGithub = socialGithubRef.current.value;\r\n\r\n        await authService.postSetting(nickname, introduce, blogTitle, socialEmail, socialGithub);\r\n        setVerified(false);\r\n        setModify(false);\r\n      } else {\r\n        alert(\"닉네임 인증을 해주세요\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // 닉네임 인증 로직\r\n  const nicknameVerifier = async () => {\r\n    const nickname = nicknameRef.current;\r\n    const verifyNick = verifyNicknameRef.current;\r\n    const resetNick = resetNicknameRef.current;\r\n    const result = await authService.validateNickname(nickname.value);\r\n    if (result === true) {\r\n      setVerified(true);\r\n      alert(\"사용가능한 닉네임입니다.\");\r\n      nickname.setAttribute(\"disabled\", true);\r\n      verifyNick.style.display = \"none\";\r\n      resetNick.style.display = \"\";\r\n    } else {\r\n      alert(\"유효하지 않는 닉네임입니다.\");\r\n    }\r\n  };\r\n  const nickPull = async () => {\r\n    const nickname = nicknameRef.current;\r\n    const verifyNick = verifyNicknameRef.current;\r\n    const resetNick = resetNicknameRef.current;\r\n    setVerified(false);\r\n    nickname.removeAttribute(\"disabled\");\r\n    verifyNick.style.display = \"\";\r\n    resetNick.style.display = \"none\";\r\n  };\r\n\r\n  //회원 비밀번호 변경\r\n  const changePassword = async () => {\r\n    const { value: password } = await Swal.fire({\r\n      title: \"기존 비밀번호를 입력해주세요\",\r\n      input: \"password\",\r\n      inputLabel: \"Old Password\",\r\n      inputPlaceholder: \"Enter your password\",\r\n      inputAttributes: {\r\n        maxlength: 10,\r\n        autocapitalize: \"off\",\r\n        autocorrect: \"off\",\r\n      },\r\n    });\r\n    const { value: password2 } = await Swal.fire({\r\n      title: \"변경할 비밀번호를 입력해주세요\",\r\n      input: \"password\",\r\n      inputLabel: \"New Password\",\r\n      inputPlaceholder: \"Enter your password\",\r\n      inputAttributes: {\r\n        maxlength: 10,\r\n        autocapitalize: \"off\",\r\n        autocorrect: \"off\",\r\n      },\r\n    });\r\n    if (password && password2) {\r\n      const result = await authService.changePasswordInSetting(password, password2);\r\n      if (result) {\r\n        Swal.fire(\"비밀번호 변경 성공\");\r\n      } else {\r\n        Swal.fire(\"비밀번호 변경 실패\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //회원 탈퇴\r\n  const unregister = async () => {\r\n    const { value: password } = await Swal.fire({\r\n      title: \"Enter your password\",\r\n      input: \"password\",\r\n      inputLabel: \"Password\",\r\n      inputPlaceholder: \"Enter your password\",\r\n      inputAttributes: {\r\n        maxlength: 10,\r\n        autocapitalize: \"off\",\r\n        autocorrect: \"off\",\r\n      },\r\n    });\r\n\r\n    if (password) {\r\n      const result = await authService.withdraw(password);\r\n      if (result === true) {\r\n        await setLoginInfo();\r\n        navigate(\"/\");\r\n        Swal.fire(\"회원탈퇴 성공\");\r\n      } else {\r\n        Swal.fire(\"회원탈퇴 실패\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //upload\r\n  const uploadFile = async (event) => {\r\n    const formData = new FormData();\r\n    const inputFile = event.target.files[0];\r\n    formData.append(\"uploadFile\", inputFile);\r\n    const file = await dbService.uploadMemberThumbnail(formData);\r\n    unstable_batchedUpdates(() => {\r\n      setData((prev) => {\r\n        return { ...prev, thumbnail: file.fileName };\r\n      });\r\n      console.log(file.thumbnail);\r\n      setPreview(file.thumbnail);\r\n    });\r\n  };\r\n  //delete\r\n  const deleteFile = async () => {\r\n    const file = encodeURIComponent(data.thumbnail);\r\n    console.log(file);\r\n    await dbService.deleteMemberThumbnail(file);\r\n    setPreview(null);\r\n    setData((prev) => {\r\n      return { ...prev, thumbnail: \"\" };\r\n    });\r\n    console.log(\"이미지 delete에 이상있습니다 위에처럼 넣어서 보내주는게 맞나요?\");\r\n  };\r\n\r\n  // 수정시 input 활성화\r\n  useEffect(() => {\r\n    const nickname = nicknameRef.current;\r\n    const introduce = introduceRef.current;\r\n    const blog = blogRef.current;\r\n    const password = passwordRef.current;\r\n    const social = socialRef.current;\r\n    const socialGithub = socialGithubRef.current;\r\n    const verifyNickname = verifyNicknameRef.current;\r\n    if (modify) {\r\n      nickname.removeAttribute(\"disabled\");\r\n      introduce.removeAttribute(\"disabled\");\r\n      blog.removeAttribute(\"disabled\");\r\n      password.setAttribute(\"type\", \"button\");\r\n      password.addEventListener(\"click\", changePassword);\r\n      password.removeAttribute(\"disabled\");\r\n      social.removeAttribute(\"disabled\");\r\n      socialGithub.removeAttribute(\"disabled\");\r\n      verifyNickname.style.display = \"\";\r\n    } else {\r\n      nickname.setAttribute(\"disabled\", true);\r\n      introduce.setAttribute(\"disabled\", true);\r\n      blog.setAttribute(\"disabled\", true);\r\n      password.setAttribute(\"disabled\", true);\r\n      password.setAttribute(\"type\", \"password\");\r\n      social.setAttribute(\"disabled\", true);\r\n      socialGithub.setAttribute(\"disabled\", true);\r\n      verifyNickname.style.display = \"none\";\r\n    }\r\n  }, [modify]);\r\n\r\n  // 최초 불러오기\r\n  useEffect(() => {\r\n    const promise = new Promise((resolve) => {\r\n      const initialData = authService.getSetting();\r\n      resolve(initialData);\r\n    });\r\n    promise.then((initialData) => {\r\n      setData((prev) => {\r\n        console.log(initialData);\r\n        if (initialData.thumbnail) {\r\n          const thumb = dbService.encoderThumbnailMember(initialData.thumbnail.fileName);\r\n          setPreview(thumb);\r\n        }\r\n        return {\r\n          ...prev,\r\n          nickname: initialData.nickname,\r\n          introduce: initialData.introduce,\r\n          blogTitle: initialData.blogTitle,\r\n          socialEmail: initialData.socialEmail,\r\n          socialGithub: initialData.socialGithub,\r\n          thumbnail: initialData.thumbnail && initialData.thumbnail.fileName,\r\n        };\r\n      });\r\n    });\r\n  }, [dbService]);\r\n  return (\r\n    <div className={styles.setting}>\r\n      <div className={styles.main}>\r\n        <div className={styles.top}>\r\n          <div className={styles.profile_field}>\r\n            <div className={styles.img}>{preview !== null && <img src={preview} alt=\"pic\" />}</div>\r\n            <input type=\"file\" className={styles.upload} onChange={uploadFile} />\r\n            <div className={styles.remove} onClick={deleteFile}>\r\n              이미지 제거\r\n            </div>\r\n          </div>\r\n          <div className={styles.nickname_field}>\r\n            <input ref={nicknameRef} className={styles.nickname} type=\"text\" defaultValue={data.nickname} disabled />\r\n            <button\r\n              ref={verifyNicknameRef}\r\n              onClick={nicknameVerifier}\r\n              style={{ width: \"30%\", marginLeft: \"70%\", display: \"none\" }}\r\n            >\r\n              닉네임 인증\r\n            </button>\r\n            <button\r\n              ref={resetNicknameRef}\r\n              onClick={nickPull}\r\n              style={{ width: \"30%\", marginLeft: \"70%\", display: \"none\" }}\r\n            >\r\n              재변경\r\n            </button>\r\n            <textarea\r\n              ref={introduceRef}\r\n              className={styles.introduce}\r\n              type=\"text\"\r\n              defaultValue={data.introduce}\r\n              disabled\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.middle}>\r\n          <div>\r\n            <label htmlFor=\"blog\">블로그 제목</label>\r\n            <input ref={blogRef} id=\"blog\" type=\"text\" defaultValue={data.blogTitle} disabled />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">비밀번호</label>\r\n            <input ref={passwordRef} id=\"password\" type=\"password\" value={\"비밀번호 변경하기\"} disabled />\r\n          </div>\r\n          <div className={styles.social}>\r\n            <label htmlFor=\"social\">소셜 정보</label>\r\n            <div className={styles.email_field}>\r\n              <input\r\n                ref={socialRef}\r\n                id=\"social\"\r\n                type=\"email\"\r\n                defaultValue={data.socialEmail}\r\n                placeholder={\"email을 입력해주세요\"}\r\n                disabled\r\n              />\r\n              <input\r\n                ref={socialGithubRef}\r\n                id=\"socialGithub\"\r\n                type=\"email\"\r\n                defaultValue={data.socialGithub}\r\n                placeholder={\"github 이메일을 입력해주세요\"}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.withdraw}>\r\n            <label htmlFor=\"withdraw\">회원 탈퇴</label>\r\n            <div>\r\n              <input id=\"withdraw\" onClick={unregister} className={styles.withdraw} type=\"button\" value={\"회원 탈퇴\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.bottom}>\r\n          <div onClick={handleSaveButton}>수정하기 / 저장하기</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Button from \"../../components/Button\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\nimport DoubleCheckPw from \"./pageCompnents/DoubleCheckPw\";\r\nimport CheckId from \"./pageCompnents/CheckId\";\r\nimport CheckNickName from \"./pageCompnents/CheckNickName\";\r\n\r\nconst SocialSign = ({ setPage, authService, setOnLoginModal }) => {\r\n  const navigate = useNavigate();\r\n  const [id, setId] = useState(\"\"); // 아이디 입력\r\n  const [newPw, setNewPw] = useState(\"\"); // 비밀번호\r\n  const [nickName, setNickName] = useState(\"\"); // 닉네임\r\n\r\n  const [isCheckedId, setIsCheckedId] = useState(null); // null || boolean, 아이디 중복확인여부\r\n  const [isCheckedPw, setIsCheckedPw] = useState(null); // null || boolean, 비밀번호 체크여부\r\n  const [isCheckedNickName, setIsCheckedNickName] = useState(null); // null || boolean, 비밀번호 체크여부\r\n\r\n  const finishSocialSignup = async () => {\r\n    if (!isCheckedId) {\r\n      alert(\"아이디 중복체크가 필요합니다.\");\r\n      return;\r\n    }\r\n    if (!isCheckedPw) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    if (!isCheckedNickName) {\r\n      alert(\"닉네임 확인이 필요합니다. 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n\r\n    // 소셜 가입\r\n    await authService.socialSignup(id, newPw, nickName);\r\n    navigate(\"/\");\r\n    setOnLoginModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginContentBox}>\r\n      <Txt txt={\"소셜 연동 회원정보 입력\"} className={styles.loginTitle} />\r\n\r\n      {/* 아이디 중복체크 */}\r\n      <CheckId\r\n        id={id}\r\n        setId={setId}\r\n        isCheckedId={isCheckedId}\r\n        setIsCheckedId={setIsCheckedId}\r\n        authService={authService}\r\n      />\r\n\r\n      {/* 닉네임 중복체크 */}\r\n      <CheckNickName\r\n        nickName={nickName}\r\n        setNickName={setNickName}\r\n        isCheckedNickName={isCheckedNickName}\r\n        setIsCheckedNickName={setIsCheckedNickName}\r\n        authService={authService}\r\n      />\r\n\r\n      {/* 비밀번호체크, async X */}\r\n      <DoubleCheckPw newPw={newPw} setNewPw={setNewPw} isCheckedPw={isCheckedPw} setIsCheckedPw={setIsCheckedPw} />\r\n\r\n      <div className={styles.twoBtnBox}>\r\n        <Button txt=\"돌아가기\" onClick={() => setPage(\"login\")} />\r\n        <Button txt=\"가입하기\" onClick={finishSocialSignup} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialSign;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ReactiveButton from \"reactive-button\";\r\nimport styles from \"./_write.module.scss\";\r\n\r\n//React Tag Input\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport \"@pathofdev/react-tag-input/build/index.css\";\r\n\r\n// TOAST UI Editor Plugins\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport chart from \"@toast-ui/editor-plugin-chart\";\r\nimport codeSyntaxHighlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\nimport uml from \"@toast-ui/editor-plugin-uml\";\r\n\r\n//TOGGLE SWITCH\r\nimport Toggle from \"react-toggle\";\r\nimport { unstable_batchedUpdates } from \"react-dom\";\r\nimport Error from \"../etc/error\";\r\n\r\nconst Write = ({ dbService, functionService, userId }) => {\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const editorRef = useRef();\r\n  const titleRef = useRef();\r\n  const introduceRef = useRef();\r\n  const seriesAddRef = useRef();\r\n\r\n  ///// what I need to upload this writes\r\n  const [data, setData] = useState({\r\n    postId: null,\r\n    title: null,\r\n    introduce: null,\r\n    content: \"\",\r\n    access: \"PUBLIC\",\r\n    seriesId: null,\r\n    thumbnailFileName: null,\r\n  });\r\n  const [tags, setTags] = useState([]);\r\n  ////\r\n  const [preview, setPreview] = useState(\" \");\r\n  const [toggle, setToggle] = useState(true);\r\n  const [seriesToggle, setSeriesToggle] = useState(false);\r\n  const [seriesList, setSeriesList] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [watcher, setWatcher] = useState(true);\r\n  //\r\n  const goToPrevious = () => {\r\n    navigate(-1);\r\n  };\r\n  // toggle 작동시 access 바꾸기\r\n  const switchToggle = () => {\r\n    setToggle(!toggle);\r\n    if (toggle) {\r\n      setData((prev) => {\r\n        return { ...prev, access: \"PRIVATE\" };\r\n      });\r\n    } else {\r\n      setData((prev) => {\r\n        return { ...prev, access: \"PUBLIC\" };\r\n      });\r\n    }\r\n  };\r\n  // 수정시 값 불러오기\r\n  const fetching = async () => {\r\n    await getSeriesInfo();\r\n    if (state) {\r\n      unstable_batchedUpdates(async () => {\r\n        const fetchingData = await dbService.getWrite(state.postId);\r\n        setData({\r\n          postId: fetchingData.postId,\r\n          title: fetchingData.title,\r\n          introduce: fetchingData.introduce,\r\n          content: fetchingData.content,\r\n          access: fetchingData.access,\r\n          seriesId: fetchingData.series && fetchingData.series.seriesId,\r\n          thumbnailFileName: fetchingData.thumbnail && fetchingData.thumbnail.fileName,\r\n        });\r\n        setTags(fetchingData.tags);\r\n        if (fetchingData.thumbnail) {\r\n          const thumb = await dbService.encoderThumbnail(fetchingData.thumbnail.fileName);\r\n          setPreview(thumb);\r\n        }\r\n        if (fetchingData.access === \"PUBLIC\") {\r\n          setToggle(true);\r\n        } else {\r\n          setToggle(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // uploadFile\r\n  const uploadFile = async (event) => {\r\n    const formData = new FormData();\r\n    const inputFile = event.target.files[0];\r\n    formData.append(\"uploadFile\", inputFile);\r\n    const file = await dbService.postThumbnamil(formData);\r\n    unstable_batchedUpdates(() => {\r\n      setData((prev) => {\r\n        return { ...prev, thumbnailFileName: file.fileName };\r\n      });\r\n      setPreview(file.thumbnail);\r\n    });\r\n  };\r\n\r\n  // function service 시리즈 불러오기 및 더하기\r\n  const findSeriesId = async (event) => {\r\n    const itemLists = document.querySelectorAll(\".series_list_write\");\r\n    itemLists.forEach((element) => {\r\n      if (element.classList.contains(\"selected_item\")) {\r\n        element.classList.remove(\"selected_item\");\r\n      }\r\n    });\r\n    const item = event.currentTarget;\r\n    await item.classList.add(\"selected_item\");\r\n    if (await item.classList.contains(\"selected_item\")) {\r\n      setData((prev) => {\r\n        return { ...prev, seriesId: item.id };\r\n      });\r\n    }\r\n  };\r\n  const getSeriesInfo = async () => {\r\n    const list = await functionService.getSeriesList();\r\n    setSeriesList(list);\r\n  };\r\n\r\n  const onAddSeries = async () => {\r\n    const name = seriesAddRef.current.value;\r\n    if (name !== null) {\r\n      await functionService.addSeries(name);\r\n    }\r\n    setSeriesToggle(false);\r\n    getSeriesInfo();\r\n  };\r\n\r\n  /// 저장 구간\r\n\r\n  /// save Point\r\n  const sendPost = async (postData) => {\r\n    const savedId = await dbService.postWrite(\r\n      data.postId,\r\n      postData.title,\r\n      postData.introduce,\r\n      postData.content,\r\n      data.access,\r\n      data.seriesId,\r\n      tags,\r\n      data.thumbnailFileName\r\n    );\r\n    setData((prev) => {\r\n      return { ...prev, postId: savedId.data.data };\r\n    });\r\n    return savedId.data.data;\r\n  };\r\n\r\n  const onSave = () => {\r\n    const promise = new Promise((resolve) => {\r\n      const editorInstance = editorRef.current.getInstance();\r\n      const getContent_md = editorInstance.getMarkdown();\r\n      const titleValue = titleRef.current.value;\r\n      const introduceValue = introduceRef.current.value;\r\n      const data = {\r\n        content: getContent_md,\r\n        title: titleValue,\r\n        introduce: introduceValue,\r\n      };\r\n      resolve(data);\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  // 버튼 클릭 이벤트들\r\n  const onSaveButton = async () => {\r\n    const postData = await onSave().then((data) => {\r\n      setData((prev) => {\r\n        return { ...prev, title: data.title, content: data.content, introduce: data.introduce };\r\n      });\r\n      return data;\r\n    });\r\n    const savedId = await sendPost(postData);\r\n    const nickname = userId.nickname;\r\n    navigate(\"/read\", {\r\n      state: { content: { member: { nickname }, postId: savedId } },\r\n    });\r\n  };\r\n\r\n  const onSaveButtonTemp = async () => {\r\n    const postData = await onSave().then((data) => {\r\n      setData((prev) => {\r\n        return { ...prev, title: data.title, content: data.content, introduce: data.introduce };\r\n      });\r\n      return data;\r\n    });\r\n    if (data.postId === null) {\r\n      const savedId = await sendPost(postData);\r\n      setData((prev) => {\r\n        return { ...prev, title: savedId };\r\n      });\r\n    }\r\n    await dbService.writeTemporary(data.postId, postData.title, postData.content);\r\n    console.log(\"success\");\r\n  };\r\n\r\n  const selectSeriesId = () => {\r\n    const item = document.getElementById(data.seriesId);\r\n    if (watcher) {\r\n      if (item != null) {\r\n        item.classList.add(\"selected_item\");\r\n        setWatcher(false);\r\n        console.log(\"hi?\");\r\n      }\r\n    }\r\n  };\r\n  const reset = () => {\r\n    const promise = new Promise((resolve) => {\r\n      setData((prev) => {\r\n        return { ...prev, seriesId: null };\r\n      });\r\n      resolve();\r\n    });\r\n    promise.then(() => {\r\n      const itemLists = document.querySelectorAll(\".series_list_write\");\r\n      itemLists.forEach((element) => {\r\n        if (element.classList.contains(\"selected_item\")) {\r\n          element.classList.remove(\"selected_item\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetching();\r\n    setTimeout(() => setLoading(true), 500);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => selectSeriesId(), 800);\r\n  }, [data, seriesList]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className={styles.body}>\r\n          <div className={styles.title}>\r\n            <input type=\"text\" placeholder=\"제목을 입력해 주세요..\" defaultValue={data.title} ref={titleRef} required />\r\n          </div>\r\n          <hr />\r\n          <ReactTagInput\r\n            tags={tags}\r\n            placeholder=\"Tags... (type and press enter)\"\r\n            maxTags={10}\r\n            editable={true}\r\n            readOnly={false}\r\n            removeOnBackspace={true}\r\n            onChange={(newTags) => setTags(newTags)}\r\n          />\r\n          <div className=\"container\">\r\n            <Editor\r\n              ref={editorRef}\r\n              initialValue={data.content}\r\n              height=\"35rem\"\r\n              previewStyle=\"vertical\"\r\n              plugins={[chart, codeSyntaxHighlight, colorSyntax, tableMergedCell, uml]}\r\n            />\r\n          </div>\r\n          <div className={styles.meta_info}>\r\n            <div>\r\n              <div className={styles.image_field}>\r\n                <h1>포스트 썸네일</h1>\r\n                <div className={styles.img}>\r\n                  <img src={preview} alt=\"none\" />\r\n                </div>\r\n                <input type=\"file\" name=\"uploadFile\" onChange={uploadFile} />\r\n              </div>\r\n              <div className={styles.access}>\r\n                <h1>공개 설정</h1>\r\n                <Toggle onClick={switchToggle} defaultChecked={toggle} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h1>INTRODUCE</h1>\r\n              <textarea ref={introduceRef} defaultValue={data.introduce} cols=\"50\" rows=\"10\"></textarea>\r\n            </div>\r\n            <div className={styles.series_field}>\r\n              <div className={styles.series_header}>\r\n                <h1>시리즈 목록</h1>\r\n                <div>\r\n                  <button onClick={reset}>리셋</button>\r\n                  <button onClick={() => setSeriesToggle(!seriesToggle)}>시리즈 추가하기</button>\r\n                </div>\r\n              </div>\r\n              {seriesToggle && (\r\n                <div className={styles.series_add}>\r\n                  <input ref={seriesAddRef} type=\"text\" />\r\n                  <button onClick={onAddSeries}>추가하기</button>\r\n                </div>\r\n              )}\r\n              {seriesList &&\r\n                seriesList.data.map((card) => (\r\n                  <div\r\n                    key={card.seriesId}\r\n                    id={card.seriesId}\r\n                    className={`${styles.series_card} series_list_write`}\r\n                    onClick={findSeriesId}\r\n                  >\r\n                    <h2>{card.seriesName}</h2>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <footer className={styles.footer}>\r\n            <ReactiveButton style={{ borderRadius: \"5px\" }} color={\"dark\"} idleText={\"나가기\"} onClick={goToPrevious} />\r\n            <div>\r\n              <ReactiveButton\r\n                style={{ borderRadius: \"5px\" }}\r\n                color={\"secondary\"}\r\n                idleText={\"임시 저장\"}\r\n                onClick={onSaveButtonTemp}\r\n              />\r\n              <ReactiveButton\r\n                style={{ borderRadius: \"5px\" }}\r\n                color={\"green\"}\r\n                idleText={\"저장\"}\r\n                onClick={onSaveButton}\r\n              />\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      ) : (\r\n        <Error title=\"Loading\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Error from \"./etc/error\";\r\n\r\nconst Redirect = ({ setLoginInfo, authService }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const result = authService.getUserInfo().then((data) => {\r\n      setLoginInfo(result);\r\n      return data;\r\n    });\r\n    navigate(\"/\");\r\n  }, [navigate, setLoginInfo, authService]);\r\n\r\n  return <Error title={\"Loading \"} />;\r\n};\r\n\r\nexport default Redirect;\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport styles from \"./_archive.module.scss\";\r\n\r\n// Components\r\nimport Input from \"../../components/Input\";\r\nimport Txt from \"../../components/Txt\";\r\n\r\n\r\nconst ArchiveHeader = ( { setTapState, searchValue, setSearchValue } ) => {\r\n\r\n  const likeTapBtnRef = useRef(null)\r\n  const recentTapBtnRef = useRef(null)\r\n\r\n  const tapChageCss = (activeRef, unactiveRef) => {\r\n    activeRef.current.style.color = \"#20c997\"\r\n    activeRef.current.style.borderBottom = \"2px solid #20c997\"\r\n    unactiveRef.current.style.color = \"black\"\r\n    unactiveRef.current.style.borderBottom = \"none\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    tapChageCss(likeTapBtnRef, recentTapBtnRef)\r\n  }, [])\r\n  \r\n\r\n  const onClickTapBtn = (e) => {\r\n    const type = e.target.innerText\r\n    if (type === \"좋아한 포스트\") {\r\n      setTapState(\"like\")\r\n      tapChageCss(likeTapBtnRef, recentTapBtnRef)\r\n    } else if (type === \"최근 읽은 포스트\") {\r\n      tapChageCss(recentTapBtnRef, likeTapBtnRef)\r\n      setTapState(\"recent\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.archiveHeader}>\r\n\r\n      <div>\r\n        <Txt\r\n          txt=\"좋아한 포스트\"\r\n          ref={likeTapBtnRef}\r\n          onClick={(e) => onClickTapBtn(e)}\r\n        />\r\n        <Txt\r\n          txt=\"최근 읽은 포스트\"\r\n          ref={recentTapBtnRef}\r\n          onClick={(e) => onClickTapBtn(e)}\r\n        />\r\n      </div>\r\n\r\n      <Input\r\n        className={styles.testInput}\r\n        type=\"text\"\r\n        onChange={ (e) => setSearchValue(e.target.value) }\r\n        value={searchValue}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ArchiveHeader;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport styles from \"./_card.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ArchiveCard = ({ content }) => {\r\n  // const postThumbURL = content.postThumbnail;\r\n  // const memberURL = content.member.memberThumbnail;\r\n  const data = content;\r\n\r\n  const navigate = useNavigate();\r\n  const goToDetail = () => {\r\n    navigate(\"/read\", { state: { content: data } });\r\n  };\r\n\r\n  // const GoReadPage = (post) => {\r\n  //   console.log(\"클릭됨\")\r\n  //   navigate(\"/read\", {\r\n  //     state: { content: { member: { nickname: nickname }, postId: post.id } },\r\n  //   });\r\n  // }\r\n\r\n  const goToProfile = () => {\r\n    navigate(\"/profile\");\r\n  };\r\n\r\n  console.log(content)\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      {/* <div className={styles.img} onClick={goToDetail}>\r\n        {postThumbURL ? <img src={postThumbURL} alt=\"pic\" /> : <img src={\"https://picsum.photos/200\"} alt=\"pic\" />}\r\n      </div> */}\r\n      <div className={styles.body} onClick={goToDetail}>\r\n        <div>\r\n          <h1>{content.title}</h1>\r\n          <p>{content.introduce}</p>\r\n        </div>\r\n        {/* <div className={styles.meta}>\r\n          <span>6일전</span>\r\n          <span>·</span>\r\n          <span>2개의 댓글</span>\r\n        </div> */}\r\n      </div>\r\n      <div className={styles.foot}>\r\n        {/* <div className={styles.foot_wrapper}>\r\n          {memberURL ? <img src={memberURL} alt=\"pic\" /> : <img src={require(\"../../service/img/6.png\")} alt=\"\" />}\r\n          <span>by</span>\r\n          <span>{content.member.nickname}</span>\r\n        </div> */}\r\n        {/* <div className={styles.foot_wrapper2} onClick={goToProfile}>\r\n          <FontAwesomeIcon icon={faHeart} />\r\n          <span>{content.loveCount}</span>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchiveCard;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// components\r\nimport ArchiveCard from \"./card/ArchiveCard\";\r\n\r\nconst LikeArchive = ( { dbService } ) => {\r\n\r\n  const [likePosts, setLikePosts] = useState();\r\n\r\n  const getLikePost = async () => {\r\n    const result = await dbService.getLikedPost();\r\n    console.log(result.data.content)\r\n    setLikePosts(result.data.content)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"실행됨\");\r\n    getLikePost();\r\n  }, []);\r\n\r\n  \r\n  return(\r\n    <>\r\n      { likePosts && \r\n        likePosts.map((v) => {\r\n        return <ArchiveCard content={v} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LikeArchive;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport ArchiveCard from \"./card/ArchiveCard\";\r\n\r\nconst RecentArchive = ( { dbService } ) => {\r\n\r\n  const [recentPosts, setRecentPosts] = useState();\r\n\r\n  const getRecentPost = async () => {\r\n    const result = await dbService.getRecentPost();\r\n    console.log(result.data.content)\r\n    setRecentPosts(result.data.content)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRecentPost();\r\n  }, []);\r\n\r\n\r\n  return(\r\n    <>\r\n      { recentPosts && \r\n        recentPosts.map( (v) => {\r\n        return <ArchiveCard content={v} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentArchive;","import { React, useCallback, useEffect, useState } from \"react\";\r\nimport styles from \"./_archive.module.scss\";\r\n// import Card from \"../../components/card/card\";\r\n// import Nav from \"./nav/nav\";\r\n// import NavLogin from \"./nav/nav_login\";\r\n// import Error from \"../etc/error\";\r\n\r\n// views\r\nimport ArchiveHeader from \"./ArchiveHeader\";\r\nimport LikeArchive from \"./LikeArchive\";\r\nimport RecentArchive from \"./RecentArchive\";\r\n\r\nconst ArchiveRouter = ( { dbService } ) => {\r\n\r\n  // useEffect(() => {\r\n  //   dbService.\r\n  // }, [])\r\n  \r\n\r\n  const [tapState, setTapState] = useState(\"like\")\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  return(\r\n    <div className={styles.archiveBox}>\r\n\r\n      <ArchiveHeader \r\n        setTapState={setTapState}\r\n        searchValue={searchValue}\r\n        setSearchValue={setSearchValue}\r\n      />\r\n\r\n    <div className={styles.archiveContent}>\r\n\r\n      { tapState === \"like\" && \r\n        <LikeArchive \r\n          dbService={dbService}\r\n        />\r\n      }\r\n\r\n      { tapState === \"recent\" && \r\n        <RecentArchive \r\n          dbService={dbService}\r\n        />\r\n      }\r\n      \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArchiveRouter;","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport styles from \"./mypage.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../components/Txt\";\r\n// page\r\nimport Post from \"./Post\";\r\nimport MypageProfile from \"./MypageProfile\";\r\n\r\nconst SeriesPosts = ({ dbService }) => {\r\n  const { nickname, seriesName } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const getMyPosts = async () => {\r\n    const result = await dbService.getSeriesDetail(nickname, seriesName);\r\n    console.log(\"시리즈 내용물\", result.data.content);\r\n    setPosts(result.data.content);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyPosts();\r\n  }, [nickname]);\r\n\r\n  const GoReadPage = (post) => {\r\n    console.log(\"클릭됨\");\r\n    navigate(\"/read\", {\r\n      state: { content: { member: { nickname: nickname }, postId: post.id } },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mypageBox}>\r\n      <MypageProfile dbService={dbService} nickname={nickname} thumbnail={location.state?.thumbnail} />\r\n\r\n      <Txt txt={\"Series: \" + seriesName} className={styles.seriesPostTitle} />\r\n      <div className={styles.mypageContent}>\r\n        {posts.length &&\r\n          posts.map((post, idx) => {\r\n            return <Post key={idx} dbService={dbService} post={post} onClick={() => GoReadPage(post)} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeriesPosts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./mypage.module.scss\";\r\n\r\n// Components\r\nimport Txt from \"../../components/Txt\";\r\n// page\r\nimport Post from \"./Post\";\r\n\r\nconst TempPost = ({ userId, dbService }) => {\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const getMyPosts = async () => {\r\n    const result = await dbService.getTemp();\r\n    setPosts(result.data.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyPosts();\r\n  }, []);\r\n\r\n  const goWritePage = (post) => {\r\n    console.log(post);\r\n    navigate(\"/write\", { state: { postId: post.id } });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mypageBox}>\r\n      <Txt txt={\"임시글 목록\"} className={styles.seriesPostTitle} />\r\n      <div className={styles.mypageContent}>\r\n        {posts.length &&\r\n          posts.map((post, idx) => {\r\n            return <TPost key={idx} post={post} onClick={() => goWritePage(post)} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempPost;\r\n\r\nconst TPost = ({ post, onClick }) => {\r\n  return (\r\n    <div className={styles.post} onClick={onClick}>\r\n      <Txt className={styles.postTitle} txt={post.title} />\r\n      <Txt\r\n        className={styles.postDate}\r\n        txt={post.createdDate + \" · \"} // 날짜 계산식 적용\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport \"./app.scss\";\r\nimport Explore from \"./views/explore/explore\";\r\nimport Header from \"./views/header/header\";\r\nimport Home from \"./views/homepage/home\";\r\nimport LoginRouter from \"./views/login/LoginRouter\";\r\nimport MypageRouter from \"./views/mypage/MypageRouter\";\r\nimport Read from \"./views/read/read\";\r\nimport Setting from \"./views/SettingPage/setting\";\r\nimport SocialSign from \"./views/login/SocialSign\";\r\nimport Write from \"./views/write/write\";\r\nimport Redirect from \"./views/redirect\";\r\nimport ArchiveRouter from \"./views/archive/ArchiveRouter\";\r\nimport SeriesPost from \"./views/mypage/SeriesPosts\";\r\nimport TempPost from \"./views/mypage/TempPost\";\r\n\r\nfunction App({ dbService, authService, functionService }) {\r\n  const [onLoginModal, setOnLoginModal] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const setLoginInfo = (result) => {\r\n    if (result) {\r\n      setUserId(result);\r\n      localStorage.setItem(\"userId\", JSON.stringify(result));\r\n    } else {\r\n      setUserId(null);\r\n      localStorage.removeItem(\"userId\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (userId) {\r\n      setOnLoginModal(false);\r\n    } else if (userId === null) {\r\n      let user;\r\n      try {\r\n        user = JSON.parse(localStorage.getItem(\"userId\"));\r\n      } catch {\r\n        user = null;\r\n      }\r\n      setUserId(user);\r\n    }\r\n  }, [userId, authService]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header authService={authService} userId={userId} setLoginInfo={setLoginInfo} setOnLoginModal={setOnLoginModal} />\r\n      {onLoginModal && (\r\n        <LoginRouter\r\n          authService={authService}\r\n          setLoginInfo={setLoginInfo}\r\n          userId={userId}\r\n          setOnLoginModal={setOnLoginModal}\r\n        />\r\n      )}\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={<Home dbService={dbService} authService={authService} userId={userId} onLoginModal={onLoginModal} />}\r\n        />\r\n        <Route\r\n          path=\"/home\"\r\n          element={<Home dbService={dbService} authService={authService} userId={userId} onLoginModal={onLoginModal} />}\r\n        />\r\n        <Route\r\n          path=\"/velo9\"\r\n          element={<Home dbService={dbService} authService={authService} userId={userId} onLoginModal={onLoginModal} />}\r\n        />\r\n        <Route path=\"/success\" element={<Redirect setLoginInfo={setLoginInfo} authService={authService} />} />\r\n        <Route path=\"/explore\" element={<Explore dbService={dbService} />} />\r\n        <Route\r\n          path=\"/write\"\r\n          element={<Write dbService={dbService} functionService={functionService} userId={userId} />}\r\n        />\r\n        <Route\r\n          path=\"/read\"\r\n          element={<Read dbService={dbService} userId={userId} functionService={functionService} />}\r\n        />\r\n        <Route\r\n          path=\"/setting\"\r\n          element={<Setting dbService={dbService} authService={authService} setLoginInfo={setLoginInfo} />}\r\n        />\r\n        <Route path=\"/:nickname\">\r\n          <Route\r\n            path=\"main\"\r\n            element={<MypageRouter userId={userId} dbService={dbService} functionService={functionService} />}\r\n          />\r\n          <Route path=\"series/:seriesName\" element={<SeriesPost userId={userId} dbService={dbService} />} />\r\n        </Route>\r\n        <Route path=\"/archive\" element={<ArchiveRouter userId={userId} dbService={dbService} />} />\r\n        <Route path=\"/temp\" element={<TempPost userId={userId} dbService={dbService} />} />\r\n        <Route\r\n          path=\"/firstLogin\"\r\n          element={<SocialSign authService={authService} setOnLoginModal={setOnLoginModal} />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\n//http://3.39.104.213:8080\r\nconst baseURL = \"http://3.39.104.213:8080\";\r\nconst opt = { withCredentials: true, headers: { \"Content-Type\": `application/json` } };\r\n\r\nclass DbService {\r\n  // db 가져오기\r\n  // 최신순 : createdDate(default 입니다)\r\n  // 오래된순: old\r\n  // 조회수순: viewCount\r\n  // 좋아요순: loveCount\r\n  async getDb(tagSelect = \"false\", content = \"\", page = \"1\", sort = \"createdDate\") {\r\n    const url = `${baseURL}/?tagSelect=${tagSelect}&content=${content}&page=${page}&sortValue=${sort}`;\r\n    const data = await axios.get(url);\r\n    return data.data;\r\n  }\r\n\r\n  // 글 작성 아이디 없이 할경우 새글 작성, 있으면 글 수정 페이지 ----- GET 번호 받기!\r\n  async getWrite(id) {\r\n    const url = `${baseURL}/write?id=${id}`;\r\n    const data = await axios.get(url, opt);\r\n    return data.data;\r\n  }\r\n\r\n  //글 작성하기  ----- POST\r\n  async postWrite(postId, title, introduce, content, access, seriesId, tags, thumbnailFileName) {\r\n    const url = `${baseURL}/write`;\r\n    const body = {\r\n      postId,\r\n      title,\r\n      introduce,\r\n      content,\r\n      access,\r\n      seriesId,\r\n      tags,\r\n      thumbnailFileName,\r\n    };\r\n    console.log(body);\r\n    const id = await axios.post(url, body, opt);\r\n    return id;\r\n  }\r\n\r\n  //임시 저장하기\r\n  async writeTemporary(postId, title, content) {\r\n    const url = `${baseURL}/writeTemporary`;\r\n    const body = {\r\n      postId,\r\n      title,\r\n      content,\r\n    };\r\n    const resultId = await axios.post(url, body, opt);\r\n    return resultId;\r\n  }\r\n\r\n  //개인 페이지 메인 보기\r\n\r\n  async memberMain(nickname, page) {\r\n    const url = `${baseURL}/${nickname}/main?page=${page}`;\r\n    const data = await axios.get(url, opt);\r\n    return data;\r\n  }\r\n\r\n  // 시리즈 별 보기\r\n\r\n  async getSeries(nickname) {\r\n    const url = `${baseURL}/${nickname}/series`;\r\n    const data = await axios.get(url);\r\n    return data;\r\n  }\r\n\r\n  //시리즈에 속한 글들 보기\r\n  async getSeriesDetail(nickname, seriesName) {\r\n    // url 수정, `${baseURL}/series/${seriesName}` 에서 변경\r\n    const url = `${baseURL}/${nickname}/series/${seriesName}`;\r\n    const data = await axios.get(url);\r\n    return data;\r\n  }\r\n\r\n  //게시글 상세보기\r\n  async getPostDetail(nickname, postId) {\r\n    const url = `${baseURL}/${nickname}/read/${postId}`;\r\n    const data = await axios.get(url);\r\n    return data.data;\r\n  }\r\n\r\n  //글 삭제하기\r\n  async postDelete(id) {\r\n    const url = `${baseURL}/delete?id=${id}`;\r\n    const body = {\r\n      id,\r\n    };\r\n    return await axios.post(url, body);\r\n  }\r\n\r\n  // 임시 저장 글 목록 (요약정보들이 있습니다)\r\n  async getTemp() {\r\n    const url = `${baseURL}/temp`;\r\n    const data = await axios.get(url, opt);\r\n    return data;\r\n  }\r\n\r\n  //좋아요 누른 게시글\r\n  async getLikedPost() {\r\n    const url = `${baseURL}/archive/like`;\r\n    const data = await axios.get(url, opt);\r\n    return data;\r\n  }\r\n\r\n  //최근 읽은 게시글\r\n  async getRecentPost() {\r\n    const url = `${baseURL}/archive/recent`;\r\n    const data = await axios.get(url, opt);\r\n    return data;\r\n  }\r\n\r\n  //섬네일\r\n  async postThumbnamil(formData) {\r\n    const url = `${baseURL}/uploadPostThumbnail`;\r\n    const data = await axios.post(url, formData);\r\n    const thumbnail = `${baseURL}/displayPostThumbnail?fileName=${encodeURIComponent(data.data.fileName)}`;\r\n    console.log(data.data.fileName);\r\n    const fileName = data.data.fileName;\r\n    return {\r\n      thumbnail,\r\n      fileName,\r\n    };\r\n  }\r\n  async uploadMemberThumbnail(formData) {\r\n    const url = `${baseURL}/uploadMemberThumbnail`;\r\n    const data = await axios.post(url, formData, opt);\r\n    const thumbnail = `${baseURL}/displayMemberThumbnail?fileName=${encodeURIComponent(data.data.fileName)}`;\r\n    console.log(data.data.fileName);\r\n    const fileName = data.data.fileName;\r\n    return {\r\n      thumbnail,\r\n      fileName,\r\n    };\r\n  }\r\n\r\n  async deleteMemberThumbnail(fileName) {\r\n    const url = `${baseURL}/deleteMemberThumbnail?fileName=${fileName}`;\r\n    return await axios.post(url, fileName, opt);\r\n  }\r\n\r\n  //섬네일 encoder\r\n  encoderThumbnail(fileName) {\r\n    const thumbnail = `${baseURL}/displayPostThumbnail?fileName=${encodeURIComponent(fileName)}`;\r\n    return thumbnail;\r\n  }\r\n  encoderThumbnailMember(fileName) {\r\n    const thumbnail = `${baseURL}/displayMemberThumbnail?fileName=${encodeURIComponent(fileName)}`;\r\n    return thumbnail;\r\n  }\r\n}\r\n\r\nexport default DbService;\r\n","import axios from \"axios\";\r\n\r\n//http://3.39.104.213:8080\r\nconst baseURL = \"http://3.39.104.213:8080\";\r\nconst opt = { withCredentials: true, headers: { \"Content-Type\": `application/json` } };\r\nclass AuthService {\r\n  //////////////           정보 가져오기          /////////////////////\r\n\r\n  // 로그인 정보 가져오기\r\n  async getUserInfo() {\r\n    const url = `${baseURL}/getHeaderInfo`;\r\n    const user = await axios\r\n      .get(url, opt)\r\n      .then((data) => data.data)\r\n      .catch((e) => {\r\n        console.log(e);\r\n        return console.log(\"로그인 정보 가져오기 실패\");\r\n      });\r\n    return user;\r\n    // axios.get(\"http://3.39.104.213:8080/getHeaderInfo\", { withCredentials: true, headers: { \"Content-Type\": `application/json` } })\r\n  }\r\n\r\n  //세팅 정보 가져오기\r\n  async getSetting() {\r\n    const url = `${baseURL}/setting`;\r\n    return await axios\r\n      .get(url, opt)\r\n      .then((data) => data.data)\r\n      .catch(() => {\r\n        return console.log(\"세팅 정보 가져오기 실패\");\r\n      });\r\n  }\r\n  // 세팅 설정하기\r\n  async postSetting(nickname, introduce, blogTitle, socialEmail, socialGithub) {\r\n    const url = `${baseURL}/setting`;\r\n    const body = {\r\n      nickname,\r\n      introduce,\r\n      blogTitle,\r\n      socialEmail,\r\n      socialGithub,\r\n    };\r\n    return await axios.post(url, body, opt).then(() => console.log(\"세팅 포스트 완료\"));\r\n  }\r\n\r\n  // 개인설정에서 쓰는 changePassword 입니다\r\n  async changePasswordInSetting(oldPassword, newPassword) {\r\n    const url = `${baseURL}/changePassword`;\r\n    const body = {\r\n      oldPassword,\r\n      newPassword,\r\n    };\r\n    return await axios\r\n      .post(url, body, opt)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n  }\r\n\r\n  ///////////////////           로그인           //////////////////////\r\n\r\n  // 일반 로그인\r\n  async login(username, password) {\r\n    const url = `${baseURL}/login`;\r\n    const body = {\r\n      username,\r\n      password,\r\n    };\r\n    const data = await axios.post(url, body, opt).then((e) => {\r\n      console.log(e);\r\n      console.log(\"성공\");\r\n      return this.getUserInfo();\r\n    });\r\n    return data;\r\n  }\r\n\r\n  //////////////////////         회원가입          ///////////////////////////////////////\r\n\r\n  // 소셜 회원가입은 실행후 /login으로 자동 이동 됩니다.\r\n  async socialSignup(username, password, nickname) {\r\n    const url = `${baseURL}/socialSignup`;\r\n    const body = {\r\n      username,\r\n      password,\r\n      nickname,\r\n    };\r\n    return await axios.post(url, body, opt);\r\n  }\r\n  //일반 회원가입\r\n  async signup(username, password, nickname, email) {\r\n    const url = `${baseURL}/signup`;\r\n    const body = {\r\n      username,\r\n      password,\r\n      nickname,\r\n      email,\r\n    };\r\n\r\n    console.log(body);\r\n    return await axios\r\n      .post(url, body)\r\n      .then(() => console.log(\"성공: \"))\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  // username 중복 검중하기 (id)\r\n  async validateUsername(username) {\r\n    const url = `${baseURL}/validateUsername?username=${username}`;\r\n    const result = await axios\r\n      .get(url)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n    return result;\r\n  }\r\n  // 닉네임\r\n  async validateNickname(nickname) {\r\n    const url = `${baseURL}/validateNickname?nickname=${nickname}`;\r\n    const result = await axios\r\n      .get(url, opt)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n    return result;\r\n  }\r\n  //////////////////////        설정          /////////////////////////////\r\n\r\n  // 로그아웃\r\n  async logout() {\r\n    const url = `${baseURL}/memberLogout`;\r\n    return await axios.get(url, opt);\r\n  }\r\n  //회원 탈퇴\r\n  async withdraw(oldPassword) {\r\n    const url = `${baseURL}/withdraw`;\r\n    const body = {\r\n      oldPassword,\r\n    };\r\n    return await axios\r\n      .post(url, body, opt)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n  }\r\n  // 인증 메일 보내기\r\n  async sendMail(email) {\r\n    const url = `${baseURL}/sendMail`;\r\n    const body = {\r\n      email,\r\n    };\r\n    const result = await axios\r\n      .post(url, body, opt)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n    return result;\r\n  }\r\n\r\n  ///////////////          비밀번호 찾기            /////////////////////\r\n\r\n  // 이메일을 통한 비밀번호 찾기\r\n  async findId(email) {\r\n    const url = `${baseURL}/findId`;\r\n    const body = {\r\n      email,\r\n    };\r\n    const result = await axios\r\n      .post(url, body)\r\n      .then((data) => data)\r\n      .catch(() => false);\r\n    console.log(result);\r\n    return result;\r\n  }\r\n\r\n  // 이메일과 유저네임으로 비밀번호 찾기 ------- MEMBERID 받는곳\r\n  async findPw(username, email) {\r\n    const url = `${baseURL}/findPw`;\r\n    const body = {\r\n      username,\r\n      email,\r\n    };\r\n    return await axios.post(url, body).then((memberId) => memberId.data);\r\n  }\r\n\r\n  // 이메일 인증 boolean으로 값 일치가 전송 옵니다. -------- certifyNumber 확인하는 곳\r\n  async certify(inputNumber) {\r\n    const url = `${baseURL}/certifyNumber`;\r\n    const body = {\r\n      inputNumber,\r\n    };\r\n    return await axios\r\n      .post(url, body)\r\n      .then((result) => result)\r\n      .catch(() => console.log(\"인증번호 오류\"));\r\n  }\r\n\r\n  // 위 비밀번호 찾기 후 memberID를 이용하여 패스워드 변경 인증이메일 확인 꼭 하고 실행 할 것\r\n  // 즉) memberID + 인증번호 확인 후 실행 하는 메소드 입니다.\r\n  async changePassword(memberId, password) {\r\n    const url = `${baseURL}/changePasswordAfterFindPW`;\r\n    const body = {\r\n      memberId,\r\n      password,\r\n    };\r\n    return await axios\r\n      .post(url, body)\r\n      .then(() => true)\r\n      .catch(() => false);\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","import axios from \"axios\";\r\n//http://3.39.104.213:8080\r\nconst baseURL = \"http://3.39.104.213:8080\";\r\nconst opt = { withCredentials: true, headers: { \"Content-Type\": `application/json` } };\r\nclass FunctionService {\r\n  async love(postId) {\r\n    const url = `${baseURL}/love`;\r\n    const body = {\r\n      postId,\r\n    };\r\n    await axios.post(url, body, opt);\r\n  }\r\n\r\n  async addSeries(name) {\r\n    const url = `${baseURL}/addSeries`;\r\n    const body = {\r\n      name,\r\n    };\r\n    await axios.post(url, body, opt);\r\n  }\r\n\r\n  async getSeriesList() {\r\n    const url = `${baseURL}/getSeriesList`;\r\n    const data = await axios.get(url, opt);\r\n    return data.data;\r\n  }\r\n\r\n  async deleteSeries(id) {\r\n    const url = `${baseURL}/deleteSeries?id=${id}`; // ?id=${id}\r\n    const body = {\r\n      id,\r\n    };\r\n    await axios.post(url, body, opt);\r\n  }\r\n}\r\n\r\nexport default FunctionService;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app\";\r\nimport DbService from \"./service/db_service\";\r\nimport AuthService from \"./service/auth_service\";\r\nimport FunctionService from \"./service/function_service\";\r\n\r\nconst dbService = new DbService();\r\nconst authService = new AuthService();\r\nconst functionService = new FunctionService();\r\n\r\nReactDOM.render(\r\n  <>\r\n    {/* 여기 브라우저 라우터  */}\r\n    <App dbService={dbService} authService={authService} functionService={functionService} />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"_setting_setting__1ReE5\",\"main\":\"_setting_main__9Tg_C\",\"top\":\"_setting_top__Nj8JO\",\"profile_field\":\"_setting_profile_field__1y9fp\",\"img\":\"_setting_img__2oDj9\",\"upload\":\"_setting_upload__3gT98\",\"remove\":\"_setting_remove__7Kh68\",\"nickname_field\":\"_setting_nickname_field__17XHj\",\"nickname\":\"_setting_nickname__IsQDp\",\"introduce\":\"_setting_introduce__2TQ0h\",\"middle\":\"_setting_middle__2q1JW\",\"withdraw\":\"_setting_withdraw__3HrVq\",\"social\":\"_setting_social__1LyyW\",\"email_field\":\"_setting_email_field__h3y5C\",\"bottom\":\"_setting_bottom__IpmyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_search_input__2i1m8\",\"list\":\"_search_list__1cqqU\",\"listItem\":\"_search_listItem__2IS_5\",\"inputSpan\":\"_search_inputSpan__2ED0S\",\"inputSpanInside\":\"_search_inputSpanInside__174pW\",\"listItemSpan\":\"_search_listItemSpan__2Hogn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"read\":\"_read_read__a6tFj\",\"title\":\"_read_title__3kCsp\",\"img\":\"_read_img__1rc7-\",\"meta_wrapper\":\"_read_meta_wrapper__3GHf5\",\"meta\":\"_read_meta__3wO4f\",\"meta_data\":\"_read_meta_data__3z_n8\",\"meta_button\":\"_read_meta_button__Y9VRN\",\"series\":\"_read_series__3qF6W\",\"tag\":\"_read_tag__yrLID\",\"content\":\"_read_content__2IACG\",\"thumb\":\"_read_thumb__ToF9n\",\"thumbsUp\":\"_read_thumbsUp__1bA3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"react-tag-input\":\"_write_react-tag-input__3uekE\",\"react-tag-input__input\":\"_write_react-tag-input__input__QxeQx\",\"react-tag-input__tag\":\"_write_react-tag-input__tag__2rq68\",\"react-tag-input__tag__content\":\"_write_react-tag-input__tag__content__WC4sH\",\"react-tag-input__tag__remove\":\"_write_react-tag-input__tag__remove__3euDe\",\"react-tag-input__tag__remove-readonly\":\"_write_react-tag-input__tag__remove-readonly__2c-7i\",\"footer\":\"_write_footer__5qmgy\",\"title\":\"_write_title__2TZ6J\",\"body\":\"_write_body__3JbS9\",\"meta_info\":\"_write_meta_info__2xdfP\",\"image_field\":\"_write_image_field__28pcW\",\"img\":\"_write_img__3iTQF\",\"access\":\"_write_access__36C-v\",\"series_field\":\"_write_series_field__2Ccgc\",\"series_header\":\"_write_series_header__16IKk\",\"series_card\":\"_write_series_card__2XOYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"_nav_login_nav__2vPjV\",\"trigger\":\"_nav_login_trigger__33a2Z\",\"toggle\":\"_nav_login_toggle__gLOLF\",\"form_input\":\"_nav_login_form_input__Dnaol\",\"form_button\":\"_nav_login_form_button__1CTd3\",\"onOff\":\"_nav_login_onOff__2d0Sg\",\"form_select\":\"_nav_login_form_select__1RbJA\",\"rotate\":\"_nav_login_rotate__3UADc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_card_card__BZl6L\",\"img\":\"_card_img__258dG\",\"body\":\"_card_body__25Naa\",\"foot\":\"_card_foot__2kaHD\",\"foot_wrapper\":\"_card_foot_wrapper__3weD0\",\"foot_wrapper2\":\"_card_foot_wrapper2__3dUWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"archiveBox\":\"_archive_archiveBox__3Wudv\",\"archiveContent\":\"_archive_archiveContent__2m56I\",\"archiveHeader\":\"_archive_archiveHeader__sSw9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_header_header__br520\",\"nav\":\"_header_nav__2q_PU\",\"nav_log\":\"_header_nav_log__16Jkf\",\"fontColor\":\"_header_fontColor__KEUCg\",\"loggedIn\":\"_header_loggedIn__1QgEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"_nav_nav__32WJW\",\"wrapper\":\"_nav_wrapper__GjVZ2\",\"fontAwesome\":\"_nav_fontAwesome__2KGiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"_footer_footer__3xHHo\",\"left\":\"_footer_left__Oeny6\",\"right\":\"_footer_right__K2-rU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_card_card__2yW00\",\"img\":\"_card_img__1gHX-\",\"body\":\"_card_body__On9H2\",\"foot\":\"_card_foot__31l0N\",\"foot_wrapper\":\"_card_foot_wrapper__wx_gb\",\"foot_wrapper2\":\"_card_foot_wrapper2__mGbxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_home_container__3j529\",\"grid_container\":\"_home_grid_container__qZChs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"explore\":\"_explore_explore__2rv95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"_menu_nav__1dMyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"_error_div__11Bmc\"};"],"sourceRoot":""}